#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞

echo "üß™ –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞ Mud-Like..."
echo "=============================================="

# –ü–æ–¥—Å—á–µ—Ç —Ñ–∞–π–ª–æ–≤
TOTAL_SCRIPTS=$(find Assets/Scripts -name "*.cs" | wc -l)
TEST_FILES=$(find Assets/Scripts/Tests -name "*.cs" | wc -l)
NON_TEST_SCRIPTS=$((TOTAL_SCRIPTS - TEST_FILES))

echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–ê–ô–õ–û–í:"
echo "   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ .cs: $TOTAL_SCRIPTS"
echo "   –¢–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: $TEST_FILES"
echo "   –û—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $NON_TEST_SCRIPTS"

# –†–∞—Å—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è
if [ $NON_TEST_SCRIPTS -gt 0 ]; then
    COVERAGE_PERCENT=$((TEST_FILES * 100 / NON_TEST_SCRIPTS))
else
    COVERAGE_PERCENT=0
fi

echo "   –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏: $COVERAGE_PERCENT%"

# –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–æ–≤ —Ç–µ—Å—Ç–æ–≤
echo ""
echo "üîç –ê–ù–ê–õ–ò–ó –¢–ò–ü–û–í –¢–ï–°–¢–û–í:"

UNIT_TESTS=$(find Assets/Scripts/Tests/Unit -name "*.cs" | wc -l)
INTEGRATION_TESTS=$(find Assets/Scripts/Tests/Integration -name "*.cs" | wc -l)
PERFORMANCE_TESTS=$(find Assets/Scripts/Tests/Performance -name "*.cs" | wc -l)
BEHAVIOR_TESTS=$(find Assets/Scripts/Tests/BehaviorDriven -name "*.cs" | wc -l)
PROPERTY_TESTS=$(find Assets/Scripts/Tests/PropertyBased -name "*.cs" | wc -l)

echo "   Unit —Ç–µ—Å—Ç—ã: $UNIT_TESTS"
echo "   Integration —Ç–µ—Å—Ç—ã: $INTEGRATION_TESTS"
echo "   Performance —Ç–µ—Å—Ç—ã: $PERFORMANCE_TESTS"
echo "   Behavior-Driven —Ç–µ—Å—Ç—ã: $BEHAVIOR_TESTS"
echo "   Property-Based —Ç–µ—Å—Ç—ã: $PROPERTY_TESTS"

# –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –ø–æ –º–æ–¥—É–ª—è–º
echo ""
echo "üìÅ –ü–û–ö–†–´–¢–ò–ï –ü–û –ú–û–î–£–õ–Ø–ú:"

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
MODULES=("Core" "Vehicles" "Terrain" "Audio" "Effects" "Networking" "UI")

for module in "${MODULES[@]}"; do
    MODULE_SCRIPTS=$(find Assets/Scripts/$module -name "*.cs" | wc -l)
    MODULE_TESTS=$(find Assets/Scripts/Tests -name "*.cs" -exec grep -l "$module" {} \; | wc -l)
    
    if [ $MODULE_SCRIPTS -gt 0 ]; then
        MODULE_COVERAGE=$((MODULE_TESTS * 100 / MODULE_SCRIPTS))
        echo "   $module: $MODULE_COVERAGE% ($MODULE_TESTS/$MODULE_SCRIPTS)"
    fi
done

# –ê–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º –±–µ–∑ —Ç–µ—Å—Ç–æ–≤
echo ""
echo "‚ùå –°–ò–°–¢–ï–ú–´ –ë–ï–ó –¢–ï–°–¢–û–í:"

# –ù–∞–π—Ç–∏ –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã
find Assets/Scripts -name "*System.cs" -not -path "*/Tests/*" | while read -r system_file; do
    system_name=$(basename "$system_file" .cs)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç –¥–ª—è —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã
    if ! find Assets/Scripts/Tests -name "*${system_name}*Test*.cs" | grep -q .; then
        echo "   üî¥ $system_name"
    fi
done

# –ê–Ω–∞–ª–∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑ —Ç–µ—Å—Ç–æ–≤
echo ""
echo "‚ùå –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ë–ï–ó –¢–ï–°–¢–û–í:"

find Assets/Scripts -path "*/Components/*.cs" -not -path "*/Tests/*" | while read -r component_file; do
    component_name=$(basename "$component_file" .cs)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    if ! find Assets/Scripts/Tests -name "*${component_name}*Test*.cs" | grep -q .; then
        echo "   üî¥ $component_name"
    fi
done

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo ""
echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"

if [ $COVERAGE_PERCENT -lt 50 ]; then
    echo "   üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ ($COVERAGE_PERCENT%)"
    echo "   üìã –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º"
elif [ $COVERAGE_PERCENT -lt 80 ]; then
    echo "   üü° –°—Ä–µ–¥–Ω–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ ($COVERAGE_PERCENT%)"
    echo "   üìã –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –£–≤–µ–ª–∏—á–∏—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–æ 80%"
else
    echo "   üü¢ –•–æ—Ä–æ—à–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ ($COVERAGE_PERCENT%)"
    echo "   üìã –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤"
fi

echo ""
echo "üìã –ü–õ–ê–ù –£–õ–£–ß–®–ï–ù–ò–Ø:"
echo "   1. –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è"
echo "   2. –î–æ–±–∞–≤–∏—Ç—å Integration —Ç–µ—Å—Ç—ã –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—É—Ç–µ–π"
echo "   3. –°–æ–∑–¥–∞—Ç—å Performance —Ç–µ—Å—Ç—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"
echo "   4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
echo "   5. –î–æ–±–∞–≤–∏—Ç—å Code Coverage –∞–Ω–∞–ª–∏–∑"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ—Å—Ç–æ–≤
echo ""
echo "üîç –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –¢–ï–°–¢–û–í:"

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç–µ—Å—Ç–æ–≤
if [ $UNIT_TESTS -gt 0 ]; then
    echo "   ‚úÖ Unit —Ç–µ—Å—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    echo "   ‚ùå Unit —Ç–µ—Å—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
fi

if [ $INTEGRATION_TESTS -gt 0 ]; then
    echo "   ‚úÖ Integration —Ç–µ—Å—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    echo "   ‚ùå Integration —Ç–µ—Å—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
fi

if [ $PERFORMANCE_TESTS -gt 0 ]; then
    echo "   ‚úÖ Performance —Ç–µ—Å—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    echo "   ‚ùå Performance —Ç–µ—Å—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
fi

echo ""
echo "=============================================="

if [ $COVERAGE_PERCENT -ge 80 ]; then
    echo "üéØ –û–¢–õ–ò–ß–ù–û–ï –ü–û–ö–†–´–¢–ò–ï –¢–ï–°–¢–ê–ú–ò!"
    exit 0
elif [ $COVERAGE_PERCENT -ge 50 ]; then
    echo "üìà –•–û–†–û–®–ï–ï –ü–û–ö–†–´–¢–ò–ï, –ï–°–¢–¨ –ö–£–î–ê –†–ê–°–¢–ò"
    exit 0
else
    echo "‚ö†Ô∏è  –ù–£–ñ–ù–û –£–õ–£–ß–®–ò–¢–¨ –ü–û–ö–†–´–¢–ò–ï –¢–ï–°–¢–ê–ú–ò"
    exit 1
fi
