#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

echo "üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ò–°–¢–ï–ú–´ –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê"
echo "=========================================="
echo "–ó–∞–ø—É—Å–∫: $(date)"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
check_system_status() {
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "‚è∞ [$timestamp] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–∞
    local overheat_pids=$(ps aux | grep overheat_protection | grep -v grep | awk '{print $2}')
    
    if [ -z "$overheat_pids" ]; then
        echo "‚ùå –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –ù–ï –ó–ê–ü–£–©–ï–ù–ê!"
        return 1
    fi
    
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $overheat_pids)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–∏—Å—Ç–µ–º—ã
    local cpu_usage=$(ps -p $overheat_pids -o %cpu --no-headers | tr -d ' ')
    local mem_usage=$(ps -p $overheat_pids -o %mem --no-headers | tr -d ' ')
    
    echo "üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã: CPU ${cpu_usage}%, RAM ${mem_usage}%"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
    if [ -f "overheat_protection.log" ]; then
        local log_size=$(wc -l < overheat_protection.log)
        local error_count=$(grep -c "ERROR\|CRITICAL\|EMERGENCY" overheat_protection.log 2>/dev/null || echo "0")
        local warning_count=$(grep -c "WARNING" overheat_protection.log 2>/dev/null || echo "0")
        
        echo "üìù –õ–æ–≥–∏: ${log_size} —Å—Ç—Ä–æ–∫, ${error_count} –æ—à–∏–±–æ–∫, ${warning_count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:"
        tail -3 overheat_protection.log | sed 's/^/   /'
    else
        echo "‚ö†Ô∏è  –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
    local cpu_load=$(cat /proc/loadavg | awk '{print $1}')
    local mem_available=$(free -m | awk 'NR==2{printf "%.1f", $7/$2*100}')
    local temp_file="/sys/class/thermal/thermal_zone0/temp"
    
    echo "üñ•Ô∏è  –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
    echo "   CPU Load: ${cpu_load}"
    echo "   RAM Available: ${mem_available}%"
    
    if [ -f "$temp_file" ]; then
        local temp_raw=$(cat "$temp_file")
        local temp_celsius=$((temp_raw / 1000))
        echo "   CPU Temperature: ${temp_celsius}¬∞C"
    else
        echo "   CPU Temperature: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    fi
    
    echo ""
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö
send_alert() {
    local message="$1"
    echo "üö® –ê–õ–ï–†–¢: $message"
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É email, push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Ç.–¥.
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo "üîÑ –ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç..."
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

while true; do
    if ! check_system_status; then
        send_alert "–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
    fi
    
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 10 –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    sleep 600  # 10 –º–∏–Ω—É—Ç = 600 —Å–µ–∫—É–Ω–¥
done