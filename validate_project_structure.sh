#!/bin/bash

# –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Unity –ø—Ä–æ–µ–∫—Ç–∞ –±–µ–∑ Unity Editor
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ headless —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é

echo "üîç –í–ê–õ–ò–î–ê–¶–ò–Ø –°–¢–†–£–ö–¢–£–†–´ UNITY –ü–†–û–ï–ö–¢–ê"
echo "===================================="
echo "–í—Ä–µ–º—è: $(date)"
echo ""

PROJECT_PATH="/workspace"
ERRORS=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—à–∏–±–æ–∫
add_error() {
    echo "‚ùå $1"
    ERRORS=$((ERRORS + 1))
}

add_warning() {
    echo "‚ö†Ô∏è  $1"
    WARNINGS=$((WARNINGS + 1))
}

add_success() {
    echo "‚úÖ $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÇ 1. –ü–†–û–í–ï–†–ö–ê –û–°–ù–û–í–ù–û–ô –°–¢–†–£–ö–¢–£–†–´"
echo "================================="

# ProjectSettings
if [ -d "$PROJECT_PATH/ProjectSettings" ]; then
    add_success "–ü–∞–ø–∫–∞ ProjectSettings –Ω–∞–π–¥–µ–Ω–∞"
    
    if [ -f "$PROJECT_PATH/ProjectSettings/ProjectVersion.txt" ]; then
        UNITY_VERSION=$(cat "$PROJECT_PATH/ProjectSettings/ProjectVersion.txt")
        add_success "Unity –≤–µ—Ä—Å–∏—è: $UNITY_VERSION"
    else
        add_error "ProjectVersion.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ -f "$PROJECT_PATH/ProjectSettings/ProjectSettings.asset" ]; then
        add_success "ProjectSettings.asset –Ω–∞–π–¥–µ–Ω"
    else
        add_error "ProjectSettings.asset –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
else
    add_error "–ü–∞–ø–∫–∞ ProjectSettings –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# Assets
if [ -d "$PROJECT_PATH/Assets" ]; then
    add_success "–ü–∞–ø–∫–∞ Assets –Ω–∞–π–¥–µ–Ω–∞"
else
    add_error "–ü–∞–ø–∫–∞ Assets –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# Packages
if [ -f "$PROJECT_PATH/Packages/manifest.json" ]; then
    add_success "Packages/manifest.json –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    if grep -q "com.unity.entities" "$PROJECT_PATH/Packages/manifest.json"; then
        add_success "Entities –ø–∞–∫–µ—Ç –Ω–∞–π–¥–µ–Ω"
    else
        add_warning "Entities –ø–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è ECS)"
    fi
    
    if grep -q "com.unity.netcode.gameobjects" "$PROJECT_PATH/Packages/manifest.json"; then
        add_success "Netcode for GameObjects –Ω–∞–π–¥–µ–Ω"
    else
        add_warning "Netcode for GameObjects –Ω–µ –Ω–∞–π–¥–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–∞)"
    fi
else
    add_error "Packages/manifest.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: ECS –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
echo "üß© 2. –ü–†–û–í–ï–†–ö–ê ECS –ö–û–ú–ü–û–ù–ï–ù–¢–û–í"
echo "=============================="

# TruckData
if [ -f "$PROJECT_PATH/Assets/Scripts/Vehicles/Components/TruckData.cs" ]; then
    add_success "TruckData.cs –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    if grep -q "struct TruckData : IComponentData" "$PROJECT_PATH/Assets/Scripts/Vehicles/Components/TruckData.cs"; then
        add_success "TruckData –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞—Å–ª–µ–¥—É–µ—Ç IComponentData"
    else
        add_error "TruckData –Ω–µ –Ω–∞—Å–ª–µ–¥—É–µ—Ç IComponentData"
    fi
    
    if grep -q "LockFrontDifferential" "$PROJECT_PATH/Assets/Scripts/Vehicles/Components/TruckData.cs"; then
        add_success "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞"
    else
        add_warning "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
else
    add_error "TruckData.cs –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# TruckControl
if [ -f "$PROJECT_PATH/Assets/Scripts/Vehicles/Components/TruckControl.cs" ]; then
    add_success "TruckControl.cs –Ω–∞–π–¥–µ–Ω"
else
    add_error "TruckControl.cs –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# WheelData
if [ -f "$PROJECT_PATH/Assets/Scripts/Vehicles/Components/WheelData.cs" ]; then
    add_success "WheelData.cs –Ω–∞–π–¥–µ–Ω"
else
    add_error "WheelData.cs –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: ECS —Å–∏—Å—Ç–µ–º—ã
echo "‚öôÔ∏è  3. –ü–†–û–í–ï–†–ö–ê ECS –°–ò–°–¢–ï–ú"
echo "========================="

# TruckMovementSystem
if [ -f "$PROJECT_PATH/Assets/Scripts/Vehicles/Systems/TruckMovementSystem.cs" ]; then
    add_success "TruckMovementSystem.cs –Ω–∞–π–¥–µ–Ω"
    
    if grep -q "BurstCompile" "$PROJECT_PATH/Assets/Scripts/Vehicles/Systems/TruckMovementSystem.cs"; then
        add_success "Burst Compiler –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞"
    else
        add_warning "Burst Compiler –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
else
    add_error "TruckMovementSystem.cs –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# TruckControlSystem
if [ -f "$PROJECT_PATH/Assets/Scripts/Vehicles/Systems/TruckControlSystem.cs" ]; then
    add_success "TruckControlSystem.cs –Ω–∞–π–¥–µ–Ω"
else
    add_error "TruckControlSystem.cs –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞
echo "üõ°Ô∏è  4. –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê"
echo "=========================================="

if [ -f "overheat_protection.sh" ]; then
    add_success "overheat_protection.sh –Ω–∞–π–¥–µ–Ω"
    
    if [ -x "overheat_protection.sh" ]; then
        add_success "overheat_protection.sh –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    else
        add_error "overheat_protection.sh –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
    if ps aux | grep overheat_protection | grep -v grep > /dev/null; then
        add_success "–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞"
    else
        add_warning "–°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
    fi
else
    add_error "overheat_protection.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
echo "üìö 5. –ü–†–û–í–ï–†–ö–ê –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò"
echo "=========================="

DOC_FILES=(
    "README.md"
    "Project_Startup/README.md"
    "Project_Startup/17_Implementation_Status.md"
    "Project_Startup/20_Overheat_Protection_System.md"
)

for doc in "${DOC_FILES[@]}"; do
    if [ -f "$PROJECT_PATH/$doc" ]; then
        add_success "$doc –Ω–∞–π–¥–µ–Ω"
    else
        add_warning "$doc –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –¢–µ—Å—Ç—ã
echo "üß™ 6. –ü–†–û–í–ï–†–ö–ê –¢–ï–°–¢–û–í"
echo "===================="

if [ -d "$PROJECT_PATH/Assets/Scripts/Tests" ]; then
    add_success "–ü–∞–ø–∫–∞ Tests –Ω–∞–π–¥–µ–Ω–∞"
    
    TEST_COUNT=$(find "$PROJECT_PATH/Assets/Scripts/Tests" -name "*Test*.cs" | wc -l)
    if [ $TEST_COUNT -gt 0 ]; then
        add_success "–ù–∞–π–¥–µ–Ω–æ $TEST_COUNT —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"
    else
        add_warning "–¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
else
    add_warning "–ü–∞–ø–∫–∞ Tests –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 7: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
echo "‚ö° 7. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò"
echo "==============================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Burst Compiler
BURST_FILES=$(find "$PROJECT_PATH/Assets/Scripts" -name "*.cs" -exec grep -l "BurstCompile" {} \; 2>/dev/null | wc -l)
if [ $BURST_FILES -gt 0 ]; then
    add_success "Burst Compiler –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ $BURST_FILES —Ñ–∞–π–ª–∞—Ö"
else
    add_warning "Burst Compiler –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Job System
JOB_FILES=$(find "$PROJECT_PATH/Assets/Scripts" -name "*.cs" -exec grep -l "IJobEntity\|IJob" {} \; 2>/dev/null | wc -l)
if [ $JOB_FILES -gt 0 ]; then
    add_success "Job System –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ $JOB_FILES —Ñ–∞–π–ª–∞—Ö"
else
    add_warning "Job System –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
fi

echo ""

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo "üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢"
echo "===================="

echo "–û—à–∏–±–∫–∏: $ERRORS"
echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNINGS"

if [ $ERRORS -eq 0 ]; then
    if [ $WARNINGS -eq 0 ]; then
        echo ""
        echo "üéâ –û–¢–õ–ò–ß–ù–û! –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ headless —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!"
        echo "‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ"
        echo "‚úÖ ECS –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
        echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –∞–∫—Ç–∏–≤–Ω–∞"
        echo ""
        echo "üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
        echo "   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Unity Editor –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./test_unity_headless.sh –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Unity"
        echo "   3. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é!"
        exit 0
    else
        echo ""
        echo "‚úÖ –•–û–†–û–®–û! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏"
        echo "‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤—å—Ç–µ $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
        exit 0
    fi
else
    echo ""
    echo "‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –í–ù–ò–ú–ê–ù–ò–ï! –ù–∞–π–¥–µ–Ω–æ $ERRORS –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫"
    echo "üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    exit 1
fi