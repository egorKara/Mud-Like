#!/bin/bash

# –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ Unity Editor –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Mud-Like

echo "üõ°Ô∏è  –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ Unity Editor"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_CHECKS=0
PASSED_CHECKS=0
FAILED_CHECKS=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check_item() {
    local description="$1"
    local command="$2"
    local critical="$3"
    
    TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
    echo -n "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: $description... "
    
    if eval "$command" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –ü–†–û–ô–î–ï–ù–ê${NC}"
        PASSED_CHECKS=$((PASSED_CHECKS + 1))
        return 0
    else
        if [ "$critical" = "true" ]; then
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê${NC}"
            FAILED_CHECKS=$((FAILED_CHECKS + 1))
            return 1
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï${NC}"
            WARNINGS=$((WARNINGS + 1))
            return 2
        fi
    fi
}

echo ""
echo "üìä –í–´–ü–û–õ–ù–ï–ù–ò–ï –ü–†–û–í–ï–†–û–ö –ö–ê–ß–ï–°–¢–í–ê –ö–û–î–ê"
echo "====================================="

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏–π Time API
check_item "–£—Å—Ç–∞—Ä–µ–≤—à–∏–π Time API" "grep -r 'Time\\.deltaTime\\|Time\\.fixedDeltaTime\\|Time\\.time' Assets/Scripts --include='*.cs' | grep -v 'SystemAPI.Time' | grep -v '// Time\\.' | grep -v 'DateTime.Now' | grep -v 'IssueType' | grep -v 'Contains' | grep -v 'UnityEngine.Time' | grep -v 'Examples' | wc -l | grep -q '^0$'" "true"

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Debug.Log –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
check_item "Debug.Log –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" "grep -r 'Debug\\.Log' Assets/Scripts/Vehicles/Systems --include='*.cs' | grep -v '#if UNITY_EDITOR' | grep -v '#endif' | wc -l | grep -q '^0$'" "true"

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–ª–ª–æ–∫–∞—Ç–æ—Ä—ã
check_item "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–ª–ª–æ–∫–∞—Ç–æ—Ä—ã –ø–∞–º—è—Ç–∏" "grep -r '= new.*Allocator\\.TempJob' Assets/Scripts --include='*.cs' | wc -l | grep -q '^0$'" "true"

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ FindObjectOfType –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
check_item "FindObjectOfType –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" "grep -r 'FindObjectOfType' Assets/Scripts/Vehicles/Systems --include='*.cs' | wc -l | grep -q '^0$'" "true"

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ foreach –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
check_item "foreach –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" "grep -r 'foreach' Assets/Scripts/Vehicles/Systems --include='*.cs' | grep -v 'OnDestroy' | wc -l | grep -q '^0$'" "false"

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ LINQ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
check_item "LINQ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" "grep -r '\\.Where(\\|\\.Select(\\|\\.First(\\|\\.Last(\\|\\.Any(\\|\\.All(' Assets/Scripts/Vehicles/Systems --include='*.cs' | wc -l | grep -q '^0$'" "false"

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ string concatenation –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
check_item "String concatenation –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" "grep -r 'string.*+' Assets/Scripts/Vehicles/Systems --include='*.cs' | wc -l | grep -q '^0$'" "false"

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ boxing –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
check_item "Boxing –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" "grep -r 'ToString()' Assets/Scripts/Vehicles/Systems --include='*.cs' | wc -l | grep -q '^0$'" "false"

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Reflection –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö
check_item "Reflection –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö" "grep -r 'using System.Reflection' Assets/Scripts/Vehicles/Systems --include='*.cs' | wc -l | grep -q '^0$'" "false"

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Generics –≤ Burst –∫–æ–¥–µ
check_item "Generics –≤ Burst –∫–æ–¥–µ" "grep -r 'class.*<T>' Assets/Scripts/Vehicles/Systems --include='*.cs' | wc -l | grep -q '^0$'" "false"

# 11. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∏–º–µ–Ω–∞ –∫–ª–∞—Å—Å–æ–≤
check_item "–î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∏–º–µ–Ω–∞ –∫–ª–∞—Å—Å–æ–≤" "./check_duplicate_class_names.sh | grep -q '–í–°–ï –ò–ú–ï–ù–ê –ö–õ–ê–°–°–û–í –£–ù–ò–ö–ê–õ–¨–ù–´'"

# 12. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
check_item "–û—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏" "tail -100 /home/egor/.config/unity3d/Editor.log | grep -E 'CS[0-9]+' | wc -l | grep -q '^0$'" "true"

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–û–ö"
echo "====================="
echo -e "–í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${BLUE}$TOTAL_CHECKS${NC}"
echo -e "–ü—Ä–æ–π–¥–µ–Ω–æ: ${GREEN}$PASSED_CHECKS${NC}"
echo -e "–û—à–∏–±–æ–∫: ${RED}$FAILED_CHECKS${NC}"
echo -e "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${YELLOW}$WARNINGS${NC}"

echo ""
echo "üéØ –°–¢–ê–¢–£–° –ö–ê–ß–ï–°–¢–í–ê –ö–û–î–ê"
echo "======================="

if [ $FAILED_CHECKS -eq 0 ]; then
    if [ $WARNINGS -eq 0 ]; then
        echo -e "${GREEN}üèÜ –û–¢–õ–ò–ß–ù–û–ï –ö–ê–ß–ï–°–¢–í–û –ö–û–î–ê${NC}"
        echo -e "${GREEN}‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã${NC}"
        echo -e "${GREEN}‚úÖ –ù–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
        echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É${NC}"
        exit 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –•–û–†–û–®–ï–ï –ö–ê–ß–ï–°–¢–í–û –ö–û–î–ê${NC}"
        echo -e "${GREEN}‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã${NC}"
        echo -e "${YELLOW}‚ö†Ô∏è  –ï—Å—Ç—å $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)${NC}"
        echo -e "${BLUE}üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞${NC}"
        exit 0
    fi
else
    echo -e "${RED}‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ –û–ë–ù–ê–†–£–ñ–ï–ù–´${NC}"
    echo -e "${RED}‚ùå $FAILED_CHECKS –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ —Ç—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
    echo -e "${RED}‚ùå –ü—Ä–æ–µ–∫—Ç –ù–ï –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É${NC}"
    echo -e "${BLUE}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º${NC}"
    exit 1
fi
