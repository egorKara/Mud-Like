#!/bin/bash

# –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Å—Ç—Ä–∞–∂ Unity Editor
# –°–æ–∑–¥–∞–Ω: 14 —Å–µ–Ω—Ç—è–±—Ä—è 2025
# –¶–µ–ª—å: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫

echo "üõ°Ô∏è  –ù–ï–ü–†–ï–†–´–í–ù–´–ô –°–¢–†–ê–ñ UNITY EDITOR"
echo "===================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CHECK_INTERVAL=30  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
LOG_FILE="unity_guardian.log"
MAX_LOG_SIZE=1048576  # 1MB

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    local message="$1"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] $message" >> "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ –ª–æ–≥–∞
check_log_size() {
    if [ -f "$LOG_FILE" ] && [ $(stat -f%z "$LOG_FILE" 2>/dev/null || stat -c%s "$LOG_FILE" 2>/dev/null || echo "0") -gt $MAX_LOG_SIZE ]; then
        tail -1000 "$LOG_FILE" > "${LOG_FILE}.tmp" && mv "${LOG_FILE}.tmp" "$LOG_FILE"
        echo "üìù –õ–æ–≥ —Ñ–∞–π–ª –æ–±—Ä–µ–∑–∞–Ω –¥–æ 1MB"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
comprehensive_check() {
    local errors_found=0
    local warnings_found=0
    
    echo "üîç –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Unity Editor..."
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
    local compilation_errors=$(tail -50 /home/egor/.config/unity3d/Editor.log 2>/dev/null | grep -c "CS[0-9]\+" 2>/dev/null | head -1 || echo "0")
    if [ "$compilation_errors" -gt 0 ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: $compilation_errors${NC}"
        log_message "–û–®–ò–ë–ö–ê: –ù–∞–π–¥–µ–Ω–æ $compilation_errors –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏"
        errors_found=$((errors_found + compilation_errors))
    else
        echo -e "${GREEN}‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è: –û–ö${NC}"
    fi
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Asset Import Workers
    local worker_logs=$(find . -name "AssetImportWorker*.log" 2>/dev/null | wc -l | tr -d ' ')
    if [ "$worker_logs" -gt 0 ]; then
        echo -e "${RED}‚ùå Asset Import Workers: $worker_logs –æ—à–∏–±–æ–∫${NC}"
        log_message "–û–®–ò–ë–ö–ê: –ù–∞–π–¥–µ–Ω–æ $worker_logs –ª–æ–≥–æ–≤ Asset Import Workers"
        errors_found=$((errors_found + worker_logs))
    else
        echo -e "${GREEN}‚úÖ Asset Import Workers: –û–ö${NC}"
    fi
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Unity –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    local unity_processes=$(ps aux | grep Unity | grep -v grep | wc -l | head -1 || echo "0")
    if [ "$unity_processes" -gt 5 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Unity –ø—Ä–æ—Ü–µ—Å—Å—ã: $unity_processes (–º–Ω–æ–≥–æ)${NC}"
        log_message "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ú–Ω–æ–≥–æ Unity –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ ($unity_processes)"
        warnings_found=$((warnings_found + 1))
    else
        echo -e "${GREEN}‚úÖ Unity –ø—Ä–æ—Ü–µ—Å—Å—ã: –û–ö ($unity_processes)${NC}"
    fi
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
    local memory_usage=$(ps aux | grep Unity | grep -v grep | awk '{sum+=$6} END {print sum/1024}' | cut -d. -f1 || echo "0")
    if [ "$memory_usage" -gt 1000 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${memory_usage}MB (–≤—ã—Å–æ–∫–æ–µ)${NC}"
        log_message "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ (${memory_usage}MB)"
        warnings_found=$((warnings_found + 1))
    else
        echo -e "${GREEN}‚úÖ –ü–∞–º—è—Ç—å: –û–ö (${memory_usage}MB)${NC}"
    fi
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ immutable packages
    local immutable_warnings=$(tail -50 /home/egor/.config/unity3d/Editor.log 2>/dev/null | grep -c "immutable packages" 2>/dev/null | head -1 || echo "0")
    if [ "$immutable_warnings" -gt 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Immutable packages: $immutable_warnings –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
        log_message "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: $immutable_warnings –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π immutable packages"
        warnings_found=$((warnings_found + immutable_warnings))
    else
        echo -e "${GREEN}‚úÖ Immutable packages: –û–ö${NC}"
    fi
    
    return $((errors_found + warnings_found))
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
auto_fix() {
    local error_type="$1"
    
    echo "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: $error_type"
    log_message "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è $error_type"
    
    case "$error_type" in
        "compilation")
            ./enhanced_quality_check.sh >/dev/null 2>&1
            ;;
        "asset_workers")
            ./asset_import_worker_fixer.sh >/dev/null 2>&1
            ;;
        "immutable_packages")
            ./immutable_packages_fixer.sh >/dev/null 2>&1
            ;;
        "general")
            ./preventive_unity_maintenance.sh >/dev/null 2>&1
            ;;
    esac
    
    log_message "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–ª—è $error_type"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
continuous_monitoring() {
    echo "üîÑ –ó–∞–ø—É—Å–∫ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    echo "‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: $CHECK_INTERVAL —Å–µ–∫—É–Ω–¥"
    echo "üìù –õ–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
    echo "üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    log_message "–°–¢–ê–†–¢: –ó–∞–ø—É—Å–∫ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Unity Editor"
    
    local check_count=0
    local last_error_count=0
    
    while true; do
        check_count=$((check_count + 1))
        local current_time=$(date '+%H:%M:%S')
        
        echo -n "[$current_time] –ü—Ä–æ–≤–µ—Ä–∫–∞ #$check_count... "
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        comprehensive_check
        local total_issues=$?
        
        # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if [ "$total_issues" -eq 0 ]; then
            echo -e "${GREEN}‚úÖ –í—Å–µ –û–ö${NC}"
            if [ "$last_error_count" -gt 0 ]; then
                log_message "–£–°–ü–ï–•: –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
                last_error_count=0
            fi
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ $total_issues –ø—Ä–æ–±–ª–µ–º${NC}"
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö
            if [ "$total_issues" -gt "$last_error_count" ]; then
                echo "üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã! –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
                auto_fix "general"
                last_error_count=$total_issues
            fi
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ª–æ–≥–∞
        check_log_size
        
        # –ü–∞—É–∑–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        echo "‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ $CHECK_INTERVAL —Å–µ–∫—É–Ω–¥..."
        sleep $CHECK_INTERVAL
    done
}

# –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_statistics() {
    if [ -f "$LOG_FILE" ]; then
        echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–¢–†–ê–ñ–ê"
        echo "===================="
        echo "üìù –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ: $(wc -l < "$LOG_FILE")"
        echo "‚ùå –û—à–∏–±–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: $(grep -c "–û–®–ò–ë–ö–ê:" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $(grep -c "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï:" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: $(grep -c "–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo "‚úÖ –£—Å–ø–µ—Ö–æ–≤: $(grep -c "–£–°–ü–ï–•:" "$LOG_FILE" 2>/dev/null || echo "0")"
        echo ""
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π:"
        tail -5 "$LOG_FILE" | sed 's/^/  /'
    else
        echo "üìä –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    "--continuous"|"-c")
        continuous_monitoring
        ;;
    "--stats"|"-s")
        show_statistics
        ;;
    "--check"|"-k")
        comprehensive_check
        ;;
    *)
        echo "üõ°Ô∏è  –ù–ï–ü–†–ï–†–´–í–ù–´–ô –°–¢–†–ê–ñ UNITY EDITOR"
        echo "===================================="
        echo ""
        echo "üí° –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:"
        echo "  $0 --continuous    # –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
        echo "  $0 --stats         # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
        echo "  $0 --check         # –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        echo ""
        echo "üéØ –¶–ï–õ–¨ –ü–†–û–ï–ö–¢–ê: –°–æ–∑–¥–∞–Ω–∏–µ MudRunner-like –∏–≥—Ä—ã"
        echo "üöó –§–æ–∫—É—Å: –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ñ–∏–∑–∏–∫–∞ –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–∞ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–µ—Ä—Ä–µ–π–Ω–∞"
        echo ""
        echo "‚úÖ –°–¢–†–ê–ñ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï"
        ;;
esac
