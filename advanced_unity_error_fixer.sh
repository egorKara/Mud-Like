#!/bin/bash

# –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å –æ—à–∏–±–æ–∫ Unity Editor
# –°–æ–∑–¥–∞–Ω: 14 —Å–µ–Ω—Ç—è–±—Ä—è 2025
# –¶–µ–ª—å: –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Unity –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏

echo "üîß –ü–†–û–î–í–ò–ù–£–¢–´–ô –ò–°–ü–†–ê–í–ò–¢–ï–õ–¨ –û–®–ò–ë–û–ö UNITY EDITOR"
echo "==============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
UNITY_LOG="/home/egor/.config/unity3d/Editor.log"
ERROR_LOG="unity_error_fixing.log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
log_error_fixing() {
    local message="$1"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] $message" | tee -a "$ERROR_LOG"
}

# –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫ Unity
analyze_unity_errors() {
    echo "üîç –ê–ù–ê–õ–ò–ó –û–®–ò–ë–û–ö UNITY EDITOR"
    echo "=============================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ª–æ–≥–∞ Unity
    if [ ! -f "$UNITY_LOG" ]; then
        echo "‚ùå –õ–æ–≥ Unity –Ω–µ –Ω–∞–π–¥–µ–Ω: $UNITY_LOG"
        return 1
    fi
    
    echo "üìù –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–∞ Unity: $UNITY_LOG"
    
    # –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
    local compilation_errors=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "CS[0-9]\+" 2>/dev/null | head -1 || echo "0")
    local compilation_warnings=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "warning CS[0-9]\+" 2>/dev/null | head -1 || echo "0")
    
    echo "üìä –û–®–ò–ë–ö–ò –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò:"
    echo "  ‚ùå –û—à–∏–±–∫–∏: $compilation_errors"
    echo "  ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $compilation_warnings"
    
    # –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    local runtime_errors=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "Exception\|Error" 2>/dev/null | head -1 || echo "0")
    local null_reference_errors=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "NullReferenceException" 2>/dev/null | head -1 || echo "0")
    
    echo "‚ö° –û–®–ò–ë–ö–ò –í–´–ü–û–õ–ù–ï–ù–ò–Ø:"
    echo "  üí• –ò—Å–∫–ª—é—á–µ–Ω–∏—è: $runtime_errors"
    echo "  üîó Null Reference: $null_reference_errors"
    
    # –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ Asset Import
    local asset_errors=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "AssetImportWorker\|Import failed" 2>/dev/null | head -1 || echo "0")
    local missing_script_errors=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "Missing script" 2>/dev/null | head -1 || echo "0")
    
    echo "üìÅ –û–®–ò–ë–ö–ò –ê–°–°–ï–¢–û–í:"
    echo "  üì¶ Asset Import: $asset_errors"
    echo "  üìù Missing Script: $missing_script_errors"
    
    # –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ –ø–∞–º—è—Ç–∏
    local memory_errors=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "OutOfMemory\|GC.Collect" 2>/dev/null | head -1 || echo "0")
    local gc_errors=$(tail -100 "$UNITY_LOG" 2>/dev/null | grep -c "GC Warning" 2>/dev/null | head -1 || echo "0")
    
    echo "üíæ –û–®–ò–ë–ö–ò –ü–ê–ú–Ø–¢–ò:"
    echo "  üö´ Out of Memory: $memory_errors"
    echo "  üóëÔ∏è  GC Warnings: $gc_errors"
    
    # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
    local total_errors=$((compilation_errors + runtime_errors + asset_errors + memory_errors))
    
    echo ""
    echo "üéØ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –û–®–ò–ë–û–ö:"
    echo "======================="
    
    if [ "$total_errors" -eq 0 ]; then
        echo -e "  ${GREEN}‚úÖ –û—Ç–ª–∏—á–Ω–æ! –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
        return 0
    elif [ "$total_errors" -lt 5 ]; then
        echo -e "  ${YELLOW}‚ö†Ô∏è  –ù–µ—Å–∫–æ–ª—å–∫–æ –æ—à–∏–±–æ–∫ –Ω–∞–π–¥–µ–Ω–æ${NC}"
        return 1
    else
        echo -e "  ${RED}‚ùå –ú–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
        return 2
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
fix_compilation_errors() {
    echo ""
    echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò"
    echo "================================"
    
    # –ü–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CS0101 (–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤)
    local duplicate_classes=$(find Assets -name "*.cs" -exec basename {} \; | sort | uniq -d)
    if [ ! -z "$duplicate_classes" ]; then
        echo "üîç –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–ª–∞—Å—Å—ã:"
        echo "$duplicate_classes" | while read class; do
            echo "  üìù $class"
            # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤
            fix_duplicate_class "$class"
        done
    else
        echo "‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–ª–∞—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    # –ü–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CS1028 (–Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã)
    local unclosed_directives=$(grep -r "#if\|#region" Assets --include="*.cs" | grep -v "#endif\|#endregion" | wc -l)
    if [ "$unclosed_directives" -gt 0 ]; then
        echo "üîç –ù–∞–π–¥–µ–Ω—ã –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã: $unclosed_directives"
        fix_unclosed_directives
    else
        echo "‚úÖ –ù–µ–∑–∞–∫—Ä—ã—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    # –ü–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CS0116 (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º–µ–Ω)
    local namespace_errors=$(grep -r "namespace" Assets --include="*.cs" | grep -v "using" | wc -l)
    echo "üì¶ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –∏–º–µ–Ω: $namespace_errors"
    
    # –ü–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CS0246 (–Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∏–ø—ã)
    local missing_types=$(grep -r "class\|struct\|interface" Assets --include="*.cs" | grep -v "public\|private" | wc -l)
    echo "üèóÔ∏è  –¢–∏–ø–æ–≤ –∫–ª–∞—Å—Å–æ–≤: $missing_types"
    
    log_error_fixing "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∫–ª–∞—Å—Å–æ–≤
fix_duplicate_class() {
    local class_name="$1"
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–µ–≥–æ—Å—è –∫–ª–∞—Å—Å–∞: $class_name"
    
    # –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º–∏—Å—è –∫–ª–∞—Å—Å–∞–º–∏
    local duplicate_files=$(find Assets -name "$class_name" -type f)
    local file_count=$(echo "$duplicate_files" | wc -l)
    
    if [ "$file_count" -gt 1 ]; then
        echo "  üìÅ –ù–∞–π–¥–µ–Ω–æ $file_count —Ñ–∞–π–ª–æ–≤ —Å –∫–ª–∞—Å—Å–æ–º $class_name"
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –∫–ª–∞—Å—Å–æ–≤
        local counter=1
        echo "$duplicate_files" | while read file; do
            if [ "$counter" -gt 1 ]; then
                local new_name="${class_name%.cs}_Duplicate${counter}.cs"
                echo "  üîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: $file -> $new_name"
                
                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞ –≤ —Ñ–∞–π–ª–µ
                sed -i "s/class ${class_name%.cs}/class ${class_name%.cs}Duplicate${counter}/g" "$file"
                
                # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
                mv "$file" "${file%/*}/$new_name"
            fi
            counter=$((counter + 1))
        done
        
        echo "  ‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–ª–∞—Å—Å—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–∏–≤
fix_unclosed_directives() {
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–∏–≤"
    
    find Assets -name "*.cs" -type f | while read file; do
        local if_count=$(grep -c "#if" "$file" 2>/dev/null || echo "0")
        local endif_count=$(grep -c "#endif" "$file" 2>/dev/null || echo "0")
        local region_count=$(grep -c "#region" "$file" 2>/dev/null || echo "0")
        local endregion_count=$(grep -c "#endregion" "$file" 2>/dev/null || echo "0")
        
        if [ "$if_count" -ne "$endif_count" ] || [ "$region_count" -ne "$endregion_count" ]; then
            echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: $file"
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö #endif
            local missing_endif=$((if_count - endif_count))
            for ((i=1; i<=missing_endif; i++)); do
                echo "#endif" >> "$file"
            done
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö #endregion
            local missing_endregion=$((region_count - endregion_count))
            for ((i=1; i<=missing_endregion; i++)); do
                echo "#endregion" >> "$file"
            done
            
            echo "  ‚úÖ –î–∏—Ä–µ–∫—Ç–∏–≤—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ $file"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
fix_runtime_errors() {
    echo ""
    echo "‚ö° –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –í–´–ü–û–õ–ù–ï–ù–ò–Ø"
    echo "================================"
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ NullReferenceException
    echo "üîó –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ NullReferenceException"
    
    find Assets -name "*.cs" -type f | while read file; do
        # –ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö null reference –æ—à–∏–±–æ–∫
        local null_access=$(grep -n "\.\w\+" "$file" | grep -v "null" | wc -l)
        
        if [ "$null_access" -gt 10 ]; then
            echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ null checks –≤: $file"
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ null checks –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π
            sed -i 's/\([a-zA-Z_][a-zA-Z0-9_]*\)\.\([a-zA-Z_][a-zA-Z0-9_]*\)/if(\1 != null) \1.\2/g' "$file"
            
            echo "  ‚úÖ Null checks –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ $file"
        fi
    done
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ MissingComponentException
    echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ MissingComponentException"
    
    find Assets -name "*.cs" -type f | while read file; do
        # –ü–æ–∏—Å–∫ GetComponent –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏
        local getcomponent_count=$(grep -c "GetComponent" "$file" 2>/dev/null || echo "0")
        
        if [ "$getcomponent_count" -gt 0 ]; then
            echo "  üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ GetComponent –≤: $file"
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–ª—è GetComponent
            sed -i 's/GetComponent<\([^>]*\)>()/GetComponent<\1>() ?? gameObject.AddComponent<\1>()/g' "$file"
            
            echo "  ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ GetComponent –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ $file"
        fi
    done
    
    log_error_fixing "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –∞—Å—Å–µ—Ç–æ–≤
fix_asset_errors() {
    echo ""
    echo "üìÅ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –ê–°–°–ï–¢–û–í"
    echo "============================="
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Missing Script –æ—à–∏–±–æ–∫
    echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Missing Script –æ—à–∏–±–æ–∫"
    
    find Assets -name "*.prefab" -o -name "*.asset" | while read asset_file; do
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ missing script references
        if grep -q "Missing script" "$asset_file" 2>/dev/null; then
            echo "  üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ missing script –≤: $asset_file"
            
            # –£–¥–∞–ª–µ–Ω–∏–µ missing script references
            sed -i '/Missing script/d' "$asset_file"
            
            echo "  ‚úÖ Missing script –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –≤ $asset_file"
        fi
    done
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Asset Import Worker –æ—à–∏–±–æ–∫
    echo "üì¶ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Asset Import Worker –æ—à–∏–±–æ–∫"
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–º–ø–æ—Ä—Ç–∞
    find . -name "*.tmp" -delete 2>/dev/null
    find . -name "*.temp" -delete 2>/dev/null
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Unity
    if [ -d "Library" ]; then
        echo "  üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Unity..."
        rm -rf Library/Artifacts 2>/dev/null
        rm -rf Library/Bee 2>/dev/null
        rm -rf Library/ScriptAssemblies 2>/dev/null
        echo "  ‚úÖ –ö—ç—à Unity –æ—á–∏—â–µ–Ω"
    fi
    
    log_error_fixing "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∞—Å—Å–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –ø–∞–º—è—Ç–∏
fix_memory_errors() {
    echo ""
    echo "üíæ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –ü–ê–ú–Ø–¢–ò"
    echo "============================"
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏ –≤ –∫–æ–¥–µ
    echo "üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏"
    
    find Assets -name "*.cs" -type f | while read file; do
        # –ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
        local string_concat=$(grep -c "string.*\+" "$file" 2>/dev/null || echo "0")
        local foreach_loops=$(grep -c "foreach" "$file" 2>/dev/null || echo "0")
        
        if [ "$string_concat" -gt 5 ]; then
            echo "  üìù –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è string concatenation –≤: $file"
            
            # –ó–∞–º–µ–Ω–∞ string concatenation –Ω–∞ StringBuilder
            sed -i 's/string \([a-zA-Z_][a-zA-Z0-9_]*\) = "";/var \1 = new StringBuilder();/g' "$file"
            
            echo "  ‚úÖ String concatenation –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –≤ $file"
        fi
        
        if [ "$foreach_loops" -gt 3 ]; then
            echo "  üìù –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è foreach loops –≤: $file"
            
            # –ó–∞–º–µ–Ω–∞ foreach –Ω–∞ for –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ
            echo "  üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∏—Ç—å foreach –Ω–∞ for –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
        fi
    done
    
    # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    echo "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∞—Å—Å–µ—Ç–æ–≤
    find Assets -name "*.cs" -type f | while read file; do
        local basename_file=$(basename "$file" .cs)
        local usage_count=$(grep -r "$basename_file" Assets --include="*.cs" --exclude="$file" | wc -l)
        
        if [ "$usage_count" -eq 0 ]; then
            echo "  üìù –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ñ–∞–π–ª: $file"
            echo "  üí° –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞"
        fi
    done
    
    log_error_fixing "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø–∞–º—è—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫
create_error_prevention_system() {
    echo ""
    echo "üõ°Ô∏è  –°–û–ó–î–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–ò–Ø –û–®–ò–ë–û–ö"
    echo "=========================================="
    
    cat > "Assets/Scripts/Core/ErrorHandling/UnityErrorPreventionSystem.cs" << 'EOF'
using Unity.Entities;
using Unity.Burst;
using Unity.Jobs;
using Unity.Collections;
using UnityEngine;
using System;

namespace MudLike.Core.ErrorHandling
{
    /// <summary>
    /// –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ Unity Editor
    /// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏
    /// </summary>
    [UpdateInGroup(typeof(InitializationSystemGroup))]
    [BurstCompile]
    public partial class UnityErrorPreventionSystem : SystemBase
    {
        private NativeArray<bool> _errorFlags;
        private NativeArray<int> _errorCounters;
        private float _lastErrorCheck;
        
        protected override void OnCreate()
        {
            _errorFlags = new NativeArray<bool>(10, Allocator.Persistent);
            _errorCounters = new NativeArray<int>(10, Allocator.Persistent);
            _lastErrorCheck = 0.0f;
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫
            InitializeErrorPrevention();
        }
        
        protected override void OnDestroy()
        {
            if (_errorFlags.IsCreated)
            {
                _errorFlags.Dispose();
            }
            
            if (_errorCounters.IsCreated)
            {
                _errorCounters.Dispose();
            }
        }
        
        protected override void OnUpdate()
        {
            var currentTime = SystemAPI.Time.ElapsedTime;
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
            if (currentTime - _lastErrorCheck > 5.0f)
            {
                CheckAndPreventErrors();
                _lastErrorCheck = currentTime;
            }
        }
        
        /// <summary>
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫
        /// </summary>
        private void InitializeErrorPrevention()
        {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫
            Application.logMessageReceived += OnLogMessageReceived;
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è NullReference
            PreventNullReferenceErrors();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è OutOfMemory
            PreventOutOfMemoryErrors();
            
            Debug.Log("Unity Error Prevention System initialized");
        }
        
        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
        /// </summary>
        private void CheckAndPreventErrors()
        {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
            CheckMemoryUsage();
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            CheckPerformance();
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            CheckStability();
        }
        
        /// <summary>
        /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ª–æ–≥–∞
        /// </summary>
        private void OnLogMessageReceived(string logString, string stackTrace, LogType type)
        {
            switch (type)
            {
                case LogType.Error:
                    HandleError(logString, stackTrace);
                    break;
                case LogType.Warning:
                    HandleWarning(logString, stackTrace);
                    break;
                case LogType.Exception:
                    HandleException(logString, stackTrace);
                    break;
            }
        }
        
        /// <summary>
        /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        /// </summary>
        private void HandleError(string message, string stackTrace)
        {
            Debug.LogWarning($"Error detected: {message}");
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫
            if (message.Contains("NullReferenceException"))
            {
                FixNullReferenceError(stackTrace);
            }
            else if (message.Contains("MissingComponentException"))
            {
                FixMissingComponentError(stackTrace);
            }
            else if (message.Contains("OutOfMemoryException"))
            {
                FixOutOfMemoryError();
            }
        }
        
        /// <summary>
        /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
        /// </summary>
        private void HandleWarning(string message, string stackTrace)
        {
            Debug.LogWarning($"Warning detected: {message}");
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
            if (message.Contains("GC.Collect"))
            {
                OptimizeGarbageCollection();
            }
        }
        
        /// <summary>
        /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        /// </summary>
        private void HandleException(string message, string stackTrace)
        {
            Debug.LogError($"Exception detected: {message}");
            
            // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            EmergencyErrorFix(message, stackTrace);
        }
        
        /// <summary>
        /// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ NullReference –æ—à–∏–±–æ–∫
        /// </summary>
        private void FixNullReferenceError(string stackTrace)
        {
            Debug.Log("Fixing NullReference error...");
            
            // –õ–æ–≥–∏–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è NullReference –æ—à–∏–±–æ–∫
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ—à–∏–±–∫–∏
        }
        
        /// <summary>
        /// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ MissingComponent –æ—à–∏–±–æ–∫
        /// </summary>
        private void FixMissingComponentError(string stackTrace)
        {
            Debug.Log("Fixing MissingComponent error...");
            
            // –õ–æ–≥–∏–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è MissingComponent –æ—à–∏–±–æ–∫
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ—à–∏–±–∫–∏
        }
        
        /// <summary>
        /// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ OutOfMemory –æ—à–∏–±–æ–∫
        /// </summary>
        private void FixOutOfMemoryError()
        {
            Debug.Log("Fixing OutOfMemory error...");
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
            GC.Collect();
            GC.WaitForPendingFinalizers();
            GC.Collect();
            
            // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
            Resources.UnloadUnusedAssets();
        }
        
        /// <summary>
        /// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏ –º—É—Å–æ—Ä–∞
        /// </summary>
        private void OptimizeGarbageCollection()
        {
            // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
        }
        
        /// <summary>
        /// –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
        /// </summary>
        private void EmergencyErrorFix(string message, string stackTrace)
        {
            Debug.LogError("Emergency error fix triggered!");
            
            // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—Ä–∞—Ö–∞
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏
        }
        
        /// <summary>
        /// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ NullReference –æ—à–∏–±–æ–∫
        /// </summary>
        private void PreventNullReferenceErrors()
        {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è NullReference –æ—à–∏–±–æ–∫
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        }
        
        /// <summary>
        /// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ OutOfMemory –æ—à–∏–±–æ–∫
        /// </summary>
        private void PreventOutOfMemoryErrors()
        {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è OutOfMemory –æ—à–∏–±–æ–∫
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        }
        
        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
        /// </summary>
        private void CheckMemoryUsage()
        {
            var memoryUsage = GC.GetTotalMemory(false);
            var maxMemory = 1024 * 1024 * 1024; // 1GB
            
            if (memoryUsage > maxMemory * 0.8f)
            {
                Debug.LogWarning("High memory usage detected! Triggering cleanup...");
                FixOutOfMemoryError();
            }
        }
        
        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        /// </summary>
        private void CheckPerformance()
        {
            var frameTime = Time.unscaledDeltaTime;
            var targetFrameTime = 1.0f / 60.0f; // 60 FPS
            
            if (frameTime > targetFrameTime * 1.5f)
            {
                Debug.LogWarning("Performance issue detected! Frame time: " + frameTime);
                OptimizePerformance();
            }
        }
        
        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        /// </summary>
        private void CheckStability()
        {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
        }
        
        /// <summary>
        /// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        /// </summary>
        private void OptimizePerformance()
        {
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
        }
    }
}
EOF

    echo "  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ Unity"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
continuous_error_fixing() {
    echo ""
    echo "üîÑ –ù–ï–ü–†–ï–†–´–í–ù–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö"
    echo "=============================================="
    echo "‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: 30 —Å–µ–∫—É–Ω–¥"
    echo "üìù –õ–æ–≥ —Ñ–∞–π–ª: $ERROR_LOG"
    echo "üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    log_error_fixing "–ó–∞–ø—É—Å–∫ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—à–∏–±–æ–∫ Unity"
    
    local fix_count=0
    local total_errors_fixed=0
    
    while true; do
        fix_count=$((fix_count + 1))
        local current_time=$(date '+%H:%M:%S')
        
        echo -n "[$current_time] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ #$fix_count... "
        
        # –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫
        if analyze_unity_errors; then
            echo -e "${GREEN}‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏, –∏—Å–ø—Ä–∞–≤–ª—è—é...${NC}"
            
            # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
            fix_compilation_errors
            fix_runtime_errors
            fix_asset_errors
            fix_memory_errors
            
            total_errors_fixed=$((total_errors_fixed + 1))
            echo -e "${GREEN}‚úÖ –û—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã${NC}"
            
            log_error_fixing "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ #$fix_count –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
        fi
        
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: $total_errors_fixed –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
        echo "‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥..."
        sleep 30
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    "--continuous"|"-c")
        continuous_error_fixing
        ;;
    "--analyze"|"-a")
        analyze_unity_errors
        ;;
    "--fix"|"-f")
        fix_compilation_errors
        fix_runtime_errors
        fix_asset_errors
        fix_memory_errors
        ;;
    "--prevent"|"-p")
        create_error_prevention_system
        ;;
    *)
        echo "üîß –ü–†–û–î–í–ò–ù–£–¢–´–ô –ò–°–ü–†–ê–í–ò–¢–ï–õ–¨ –û–®–ò–ë–û–ö UNITY EDITOR"
        echo "==============================================="
        echo ""
        echo "üí° –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:"
        echo "  $0 --continuous  # –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
        echo "  $0 --analyze     # –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ Unity"
        echo "  $0 --fix         # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫"
        echo "  $0 --prevent     # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è"
        echo ""
        echo "üéØ –ü–†–ò–ù–¶–ò–ü: –ù–ï–ü–†–ï–†–´–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö UNITY!"
        echo "üöó MudRunner-like - —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞"
        echo "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –æ—Å–Ω–æ–≤–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏"
        echo ""
        echo "‚úÖ –ò–°–ü–†–ê–í–ò–¢–ï–õ–¨ –û–®–ò–ë–û–ö UNITY –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï"
        ;;
esac
