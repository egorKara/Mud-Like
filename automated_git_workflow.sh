#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Git workflow –¥–ª—è MudRunner-like
# –°–æ–∑–¥–∞–Ω: 14 —Å–µ–Ω—Ç—è–±—Ä—è 2025
# –¶–µ–ª—å: –ù–ï –ó–ê–ë–´–í–ê–¢–¨ –ü–£–®–ò–¢–¨ –ù–ê –ì–ò–¢–•–ê–ë - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è!

echo "üîÑ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ô GIT WORKFLOW MUD-RUNNER-LIKE"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Git
GIT_LOG="git_workflow.log"
AUTO_COMMIT_INTERVAL=300  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è Git –æ–ø–µ—Ä–∞—Ü–∏–π
log_git_operation() {
    local message="$1"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] $message" | tee -a "$GIT_LOG"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Git
check_git_status() {
    echo "üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê GIT"
    echo "========================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Git
    if [ ! -d ".git" ]; then
        echo "‚ùå Git –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
        echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git..."
        git init
        git remote add origin https://github.com/egor/Mud-Like.git 2>/dev/null || echo "‚ö†Ô∏è  Remote origin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        log_git_operation "Git –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    else
        echo "‚úÖ Git –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    local status=$(git status --porcelain 2>/dev/null)
    local untracked=$(git ls-files --others --exclude-standard 2>/dev/null | wc -l | tr -d ' ')
    local modified=$(git diff --name-only 2>/dev/null | wc -l | tr -d ' ')
    local staged=$(git diff --cached --name-only 2>/dev/null | wc -l | tr -d ' ')
    
    echo "üìä –°—Ç–∞—Ç—É—Å Git:"
    echo "  üìÅ –ù–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤: $untracked"
    echo "  üîÑ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $modified"
    echo "  üìã –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $staged"
    
    if [ "$untracked" -gt 0 ] || [ "$modified" -gt 0 ] || [ "$staged" -gt 0 ]; then
        echo -e "  ${YELLOW}‚ö†Ô∏è  –ï—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞${NC}"
        return 1
    else
        echo -e "  ${GREEN}‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è${NC}"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–º–º–∏—Ç–∞
auto_commit() {
    echo ""
    echo "üíæ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ö–û–ú–ú–ò–¢"
    echo "========================"
    
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    local commit_message="üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç MudRunner-like - $timestamp"
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    echo "üìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
    git add . 2>/dev/null
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    local staged_files=$(git diff --cached --name-only 2>/dev/null | wc -l | tr -d ' ')
    
    if [ "$staged_files" -eq 0 ]; then
        echo "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
        return 0
    fi
    
    echo "üìù –ö–æ–º–º–∏—Ç: $staged_files —Ñ–∞–π–ª–æ–≤"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
    git commit -m "$commit_message" 2>/dev/null
    
    if [ $? -eq 0 ]; then
        echo -e "  ${GREEN}‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω: $commit_message${NC}"
        log_git_operation "–ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω: $staged_files —Ñ–∞–π–ª–æ–≤"
        return 0
    else
        echo -e "  ${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–∏—Ç–∞${NC}"
        log_git_operation "–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É—à–∞
auto_push() {
    echo ""
    echo "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ü–£–® –ù–ê –ì–ò–¢–•–ê–ë"
    echo "================================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –ø—É—à–∞
    local ahead=$(git rev-list --count @{u}..HEAD 2>/dev/null || echo "0")
    
    if [ "$ahead" -eq 0 ]; then
        echo "‚úÖ –ù–µ—Ç –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –ø—É—à–∞"
        return 0
    fi
    
    echo "üì§ –ü—É—à $ahead –∫–æ–º–º–∏—Ç–æ–≤ –Ω–∞ GitHub..."
    
    # –ü—É—à –Ω–∞ GitHub
    git push origin main 2>/dev/null || git push origin master 2>/dev/null
    
    if [ $? -eq 0 ]; then
        echo -e "  ${GREEN}‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—à–µ–Ω–æ –Ω–∞ GitHub!${NC}"
        log_git_operation "–ü–£–® –ù–ê GITHUB: $ahead –∫–æ–º–º–∏—Ç–æ–≤"
        return 0
    else
        echo -e "  ${RED}‚ùå –û—à–∏–±–∫–∞ –ø—É—à–∞ –Ω–∞ GitHub${NC}"
        log_git_operation "–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—à–∏—Ç—å –Ω–∞ GitHub"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ Git workflow
automated_git_workflow() {
    echo "üîÑ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ô GIT WORKFLOW"
    echo "==================================="
    echo "‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞: $AUTO_COMMIT_INTERVAL —Å–µ–∫—É–Ω–¥"
    echo "üìù –õ–æ–≥ —Ñ–∞–π–ª: $GIT_LOG"
    echo "üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    log_git_operation "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Git workflow"
    
    local workflow_count=0
    local successful_commits=0
    local successful_pushes=0
    
    while true; do
        workflow_count=$((workflow_count + 1))
        local current_time=$(date '+%H:%M:%S')
        
        echo -n "[$current_time] Git workflow #$workflow_count... "
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git
        if check_git_status; then
            echo -e "${GREEN}‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è${NC}"
        else
            # 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç
            if auto_commit; then
                successful_commits=$((successful_commits + 1))
                
                # 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—É—à
                if auto_push; then
                    successful_pushes=$((successful_pushes + 1))
                    echo -e "${GREEN}‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø—É—à–µ–Ω—ã –Ω–∞ GitHub!${NC}"
                else
                    echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –ø—É—à –Ω–µ —É–¥–∞–ª—Å—è${NC}"
                fi
            else
                echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç${NC}"
            fi
        fi
        
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: $successful_commits –∫–æ–º–º–∏—Ç–æ–≤, $successful_pushes –ø—É—à–µ–π"
        echo "‚è≥ –°–ª–µ–¥—É—é—â–∏–π Git workflow —á–µ—Ä–µ–∑ $AUTO_COMMIT_INTERVAL —Å–µ–∫—É–Ω–¥..."
        sleep $AUTO_COMMIT_INTERVAL
    done
}

# –§—É–Ω–∫—Ü–∏—è —Ä—É—á–Ω–æ–≥–æ Git workflow
manual_git_workflow() {
    echo "üîÑ –†–£–ß–ù–û–ô GIT WORKFLOW"
    echo "======================"
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    check_git_status
    local has_changes=$?
    
    if [ $has_changes -eq 0 ]; then
        echo "‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è - –Ω–µ—á–µ–≥–æ –∫–æ–º–º–∏—Ç–∏—Ç—å"
        return 0
    fi
    
    # 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç
    if auto_commit; then
        # 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—É—à
        if auto_push; then
            echo -e "${GREEN}üéâ –£—Å–ø–µ—à–Ω–æ! –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø—É—à–µ–Ω—ã –Ω–∞ GitHub!${NC}"
            log_git_operation "–†–£–ß–ù–û–ô WORKFLOW: –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω"
            return 0
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –ø—É—à –Ω–µ —É–¥–∞–ª—Å—è${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Git
show_git_statistics() {
    echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê GIT"
    echo "================="
    
    if [ -f "$GIT_LOG" ]; then
        echo "üìù –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –ª–æ–≥–µ: $(wc -l < "$GIT_LOG")"
        echo "‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∫–æ–º–º–∏—Ç–æ–≤: $(grep -c "–ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω" "$GIT_LOG" 2>/dev/null || echo "0")"
        echo "üöÄ –£—Å–ø–µ—à–Ω—ã—Ö –ø—É—à–µ–π: $(grep -c "–ü–£–® –ù–ê GITHUB" "$GIT_LOG" 2>/dev/null || echo "0")"
        echo "‚ùå –û—à–∏–±–æ–∫: $(grep -c "–û–®–ò–ë–ö–ê" "$GIT_LOG" 2>/dev/null || echo "0")"
        echo ""
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ–ø–µ—Ä–∞—Ü–∏–π:"
        tail -5 "$GIT_LOG" | sed 's/^/  /'
    else
        echo "üìä –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Git workflow –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
    fi
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    echo ""
    echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø:"
    local total_commits=$(git rev-list --count HEAD 2>/dev/null || echo "0")
    local total_files=$(git ls-files 2>/dev/null | wc -l | tr -d ' ')
    local total_size=$(du -sh . 2>/dev/null | cut -f1 || echo "0")
    
    echo "  üìù –í—Å–µ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤: $total_commits"
    echo "  üìÅ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤: $total_files"
    echo "  üíæ –†–∞–∑–º–µ—Ä —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $total_size"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Git
setup_git() {
    echo "üîß –ù–ê–°–¢–†–û–ô–ö–ê GIT"
    echo "================"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Git
    echo "üë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Git..."
    git config --global user.name "MudRunner-Like Developer" 2>/dev/null
    git config --global user.email "developer@mudrunner-like.com" 2>/dev/null
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ø–µ—Ä–µ–≤–æ–¥–∞ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
    echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ø–µ—Ä–µ–≤–æ–¥–∞ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫..."
    git config --global core.autocrlf input 2>/dev/null
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    echo "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    git config --global --add safe.directory "$(pwd)" 2>/dev/null
    
    echo "‚úÖ Git –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    "--auto"|"-a")
        setup_git
        automated_git_workflow
        ;;
    "--manual"|"-m")
        setup_git
        manual_git_workflow
        ;;
    "--stats"|"-s")
        show_git_statistics
        ;;
    "--setup"|"-i")
        setup_git
        ;;
    *)
        echo "üîÑ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ô GIT WORKFLOW MUD-RUNNER-LIKE"
        echo "=================================================="
        echo ""
        echo "üí° –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:"
        echo "  $0 --auto     # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π Git workflow"
        echo "  $0 --manual   # –†—É—á–Ω–æ–π Git workflow"
        echo "  $0 --stats    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É Git"
        echo "  $0 --setup    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git"
        echo ""
        echo "üéØ –ü–†–ò–ù–¶–ò–ü: –ù–ï –ó–ê–ë–´–í–ê–¢–¨ –ü–£–®–ò–¢–¨ –ù–ê –ì–ò–¢–•–ê–ë!"
        echo "üöó MudRunner-like - —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞"
        echo "üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è Git - –æ—Å–Ω–æ–≤–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        echo ""
        echo "‚úÖ GIT WORKFLOW –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï"
        ;;
esac
