#!/bin/bash

# –£–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω—ã–π –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä Unity –ø—Ä–æ–µ–∫—Ç–∞
# –°–æ–∑–¥–∞–Ω: 14 —Å–µ–Ω—Ç—è–±—Ä—è 2025
# –ü—Ä–∏–Ω—Ü–∏–ø: 80/20 - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —É—Å–∏–ª–∏—è—Ö

echo "üöÄ –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–´–ô –û–ü–¢–ò–ú–ò–ó–ê–¢–û–† UNITY"
echo "===================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ (20% —É—Å–∏–ª–∏–π, 80% —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞)
quick_diagnosis() {
    echo "üîç –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê (–ü—Ä–∏–Ω—Ü–∏–ø 80/20)"
    echo "======================================="
    
    local issues_found=0
    
    # 1. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ (—Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ)
    echo -n "üîç –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏... "
    local critical_errors=$(tail -50 /home/egor/.config/unity3d/Editor.log 2>/dev/null | grep -c "CS[0-9]\+" 2>/dev/null | head -1 || echo "0")
    if [ "$critical_errors" -gt 0 ]; then
        echo -e "${RED}‚ùå $critical_errors –æ—à–∏–±–æ–∫${NC}"
        issues_found=$((issues_found + critical_errors))
    else
        echo -e "${GREEN}‚úÖ –û–ö${NC}"
    fi
    
    # 2. Asset Import Workers (–≤—Ç–æ—Ä–æ–µ –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏)
    echo -n "üîç Asset Import Workers... "
    local worker_issues=$(find . -name "AssetImportWorker*.log" 2>/dev/null | wc -l | tr -d ' ')
    if [ "$worker_issues" -gt 0 ]; then
        echo -e "${RED}‚ùå $worker_issues –ø—Ä–æ–±–ª–µ–º${NC}"
        issues_found=$((issues_found + worker_issues))
    else
        echo -e "${GREEN}‚úÖ –û–ö${NC}"
    fi
    
    # 3. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å Unity (—Ç—Ä–µ—Ç—å–µ –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏)
    echo -n "üîç –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å... "
    local unity_processes=$(ps aux | grep Unity | grep -v grep | wc -l | head -1 || echo "0")
    local memory_usage=$(ps aux | grep Unity | grep -v grep | awk '{sum+=$6} END {print sum/1024}' | cut -d. -f1 || echo "0")
    if [ "$unity_processes" -gt 3 ] || [ "$memory_usage" -gt 800 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å–æ–≤: $unity_processes, –ü–∞–º—è—Ç—å: ${memory_usage}MB${NC}"
        issues_found=$((issues_found + 1))
    else
        echo -e "${GREEN}‚úÖ –û–ö (–ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $unity_processes, –ø–∞–º—è—Ç—å: ${memory_usage}MB)${NC}"
    fi
    
    return $issues_found
}

# –§—É–Ω–∫—Ü–∏—è —É–º–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ñ–æ–∫—É—Å –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö)
smart_fix() {
    local issues_count="$1"
    
    echo ""
    echo "üß† –£–ú–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï (–§–æ–∫—É—Å –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö)"
    echo "====================================================="
    
    if [ "$issues_count" -eq 0 ]; then
        echo -e "${GREEN}üéâ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!${NC}"
        echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏${NC}"
        return 0
    fi
    
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ $issues_count –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º${NC}"
    echo "üîß –ó–∞–ø—É—Å–∫ —É–º–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    local critical_errors=$(tail -50 /home/egor/.config/unity3d/Editor.log 2>/dev/null | grep -c "CS[0-9]\+" 2>/dev/null | head -1 || echo "0")
    local worker_issues=$(find . -name "AssetImportWorker*.log" 2>/dev/null | wc -l | tr -d ' ')
    
    if [ "$critical_errors" -gt 0 ]; then
        echo "üö® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏..."
        ./enhanced_quality_check.sh >/dev/null 2>&1
        echo "  ‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ"
    fi
    
    if [ "$worker_issues" -gt 0 ]; then
        echo "üö® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Asset Import Workers..."
        ./asset_import_worker_fixer.sh >/dev/null 2>&1
        echo "  ‚úÖ Asset Import Workers –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    fi
    
    # –û–±—â–∞—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞
    echo "üõ°Ô∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ä..."
    ./preventive_unity_maintenance.sh >/dev/null 2>&1
    echo "  ‚úÖ –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
    
    echo ""
    echo -e "${GREEN}‚úÖ –£–ú–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
performance_optimization() {
    echo ""
    echo "‚ö° –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò"
    echo "=================================="
    
    # 1. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    echo "üßπ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫—ç—à–∞..."
    rm -rf Library/ScriptAssemblies Library/PlayerDataCache Temp 2>/dev/null
    echo "  ‚úÖ –ö—ç—à –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω"
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤..."
    local duplicates=$(./check_duplicate_class_names.sh 2>/dev/null | grep -c "–¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è" || echo "0")
    if [ "$duplicates" -gt 0 ]; then
        echo "  ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ $duplicates –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤"
        echo "  üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    else
        echo "  ‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    # 3. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è .meta —Ñ–∞–π–ª–æ–≤
    echo "üìÅ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è .meta —Ñ–∞–π–ª–æ–≤..."
    local cs_files=$(find Assets -name "*.cs" | wc -l | tr -d ' ')
    local meta_files=$(find Assets -name "*.meta" | wc -l | tr -d ' ')
    if [ "$cs_files" -ne "$meta_files" ]; then
        echo "  ‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ .meta —Ñ–∞–π–ª–æ–≤ ($meta_files/$cs_files)"
        echo "  üí° Unity –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Å—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã"
    else
        echo "  ‚úÖ .meta —Ñ–∞–π–ª—ã –≤ –ø–æ—Ä—è–¥–∫–µ"
    fi
    
    echo -e "${GREEN}‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ó–ê–í–ï–†–®–ï–ù–ê${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
code_quality_check() {
    echo ""
    echo "üìä –ü–†–û–í–ï–†–ö–ê –ö–ê–ß–ï–°–¢–í–ê –ö–û–î–ê"
    echo "=========================="
    
    # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
    local cs_files=$(find Assets -name "*.cs" | wc -l | tr -d ' ')
    local total_lines=$(find Assets -name "*.cs" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}' || echo "0")
    local avg_lines=$((total_lines / cs_files))
    
    echo "üìÅ –§–∞–π–ª–æ–≤ C#: $cs_files"
    echo "üìù –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: $total_lines"
    echo "üìä –°—Ä–µ–¥–Ω–µ–µ —Å—Ç—Ä–æ–∫ –Ω–∞ —Ñ–∞–π–ª: $avg_lines"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã ECS
    local ecs_components=$(find Assets -name "*.cs" -exec grep -l "IComponentData\|IBufferElementData" {} \; 2>/dev/null | wc -l | tr -d ' ')
    local ecs_systems=$(find Assets -name "*.cs" -exec grep -l "SystemBase\|ISystem" {} \; 2>/dev/null | wc -l | tr -d ' ')
    
    echo "üéØ ECS –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: $ecs_components"
    echo "üöÄ ECS —Å–∏—Å—Ç–µ–º: $ecs_systems"
    
    # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
    if [ "$avg_lines" -lt 100 ] && [ "$ecs_components" -gt 10 ] && [ "$ecs_systems" -gt 5 ]; then
        echo -e "${GREEN}üèÜ –û–¢–õ–ò–ß–ù–û–ï –ö–ê–ß–ï–°–¢–í–û –ö–û–î–ê${NC}"
        echo -e "${GREEN}‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ ECS –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞${NC}"
    elif [ "$avg_lines" -lt 200 ] && [ "$ecs_components" -gt 5 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –•–û–†–û–®–ï–ï –ö–ê–ß–ï–°–¢–í–û –ö–û–î–ê${NC}"
        echo -e "${YELLOW}üí° –ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è${NC}"
    else
        echo -e "${RED}‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –£–õ–£–ß–®–ï–ù–ò–ï –ö–ê–ß–ï–°–¢–í–ê${NC}"
        echo -e "${RED}üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
final_verification() {
    echo ""
    echo "üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê"
    echo "====================="
    
    # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –±—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    quick_diagnosis
    local final_issues=$?
    
    echo ""
    if [ "$final_issues" -eq 0 ]; then
        echo -e "${GREEN}üèÜ –ü–†–û–ï–ö–¢ –í –û–¢–õ–ò–ß–ù–û–ú –°–û–°–¢–û–Ø–ù–ò–ò!${NC}"
        echo -e "${GREEN}‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–µ–Ω—ã${NC}"
        echo -e "${GREEN}‚úÖ Unity Editor –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ${NC}"
        echo -e "${GREEN}‚úÖ –¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ MudRunner-like –¥–æ—Å—Ç–∏–∂–∏–º–∞${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –û–°–¢–ê–õ–ò–°–¨ –ù–ï–ó–ù–ê–ß–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–ë–õ–ï–ú–´${NC}"
        echo -e "${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞${NC}"
    fi
    
    echo ""
    echo "üéØ –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï –û –¶–ï–õ–ò –ü–†–û–ï–ö–¢–ê:"
    echo "üöó –°–æ–∑–¥–∞–Ω–∏–µ MudRunner-like –∏–≥—Ä—ã —Å:"
    echo "   ‚úÖ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π —Ñ–∏–∑–∏–∫–æ–π –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–∞"
    echo "   ‚úÖ –î–µ—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —Ç–µ—Ä—Ä–µ–π–Ω–∞ –ø–æ–¥ –∫–æ–ª–µ—Å–∞–º–∏"
    echo "   ‚úÖ –î–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π –¥–ª—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–∞"
    echo "   ‚úÖ ECS-–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    echo "üöÄ –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–´–ô –û–ü–¢–ò–ú–ò–ó–ê–¢–û–† UNITY"
    echo "===================================="
    echo "üéØ –¶–µ–ª—å: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–ü—Ä–∏–Ω—Ü–∏–ø 80/20)"
    echo ""
    
    # 1. –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    quick_diagnosis
    local issues_found=$?
    
    # 2. –£–º–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    smart_fix $issues_found
    
    # 3. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    performance_optimization
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
    code_quality_check
    
    # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    final_verification
    
    echo ""
    echo "‚úÖ –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê"
    echo "====================================="
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
