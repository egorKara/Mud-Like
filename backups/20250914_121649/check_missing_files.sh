#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ Unity

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ Mud-Like..."
echo "=================================================="

check_missing_files() {
    echo "üìã –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # –°–ø–∏—Å–æ–∫ –ª–æ–≥–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    log_files=("unity_build.log" "prototype_build.log" "prototype_build2.log" "prototype_build3.log" "test_build.log")
    
    missing_files_count=0
    found_files_count=0
    
    for log_file in "${log_files[@]}"; do
        if [ -f "$log_file" ]; then
            echo "üìÑ –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–∞: $log_file"
            
            # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º –∏–∑ –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
            referenced_files=$(grep -o "Assets/[^:]*\.cs" "$log_file" 2>/dev/null | sort -u)
            
            for file_path in $referenced_files; do
                if [ ! -f "$file_path" ]; then
                    echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: $file_path"
                    missing_files_count=$((missing_files_count + 1))
                else
                    echo "‚úÖ –ù–ê–ô–î–ï–ù: $file_path"
                    found_files_count=$((found_files_count + 1))
                fi
            done
        else
            echo "‚ö†Ô∏è  –õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω: $log_file"
        fi
    done
    
    echo ""
    echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
    echo "   –ù–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $found_files_count"
    echo "   –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤: $missing_files_count"
    
    if [ $missing_files_count -gt 0 ]; then
        echo "üö´ –ù–ê–ô–î–ï–ù–´ –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –§–ê–ô–õ–´!"
        return 1
    else
        echo "‚úÖ –í–°–ï –§–ê–ô–õ–´ –ù–ê–ô–î–ï–ù–´!"
        return 0
    fi
}

check_baker_classes() {
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Baker –∫–ª–∞—Å—Å–æ–≤ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å using –¥–∏—Ä–µ–∫—Ç–∏–≤..."
    echo "=========================================================="
    
    error_count=0
    
    for file in $(find Assets/Scripts -name "*.cs" -type f); do
        if [ -f "$file" ]; then
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Baker –∫–ª–∞—Å—Å–∞ –±–µ–∑ using Unity.Entities
            if grep -q "Baker<" "$file" && ! grep -q "using Unity.Entities" "$file"; then
                echo "‚ùå $file: Baker –∫–ª–∞—Å—Å –±–µ–∑ using Unity.Entities"
                error_count=$((error_count + 1))
            fi
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è IConvertGameObjectToEntity –±–µ–∑ using Unity.Entities
            if grep -q "IConvertGameObjectToEntity" "$file" && ! grep -q "using Unity.Entities" "$file"; then
                echo "‚ùå $file: IConvertGameObjectToEntity –±–µ–∑ using Unity.Entities"
                error_count=$((error_count + 1))
            fi
        fi
    done
    
    if [ $error_count -gt 0 ]; then
        echo "üö´ –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò –í $error_count –§–ê–ô–õ–ê–•!"
        echo "üí° –î–æ–±–∞–≤—å—Ç–µ using Unity.Entities; –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–æ–≤"
        return 1
    else
        echo "‚úÖ –í–°–ï BAKER –ö–õ–ê–°–°–´ –ö–û–†–†–ï–ö–¢–ù–´!"
        return 0
    fi
}

check_assembly_definitions() {
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Assembly Definitions..."
    echo "=================================="
    
    error_count=0
    
    for asmdef in $(find Assets -name "*.asmdef" -type f); do
        echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞: $asmdef"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ Unity.Entities –≤ —Ñ–∞–π–ª–∞—Ö —Å Baker
        if grep -q "Baker<\|IConvertGameObjectToEntity" Assets/Scripts/$(basename "$asmdef" .asmdef)/*.cs 2>/dev/null; then
            if ! grep -q "Unity.Entities" "$asmdef"; then
                echo "‚ùå $asmdef: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ Unity.Entities"
                error_count=$((error_count + 1))
            else
                echo "‚úÖ $asmdef: –°—Å—ã–ª–∫–∞ –Ω–∞ Unity.Entities –Ω–∞–π–¥–µ–Ω–∞"
            fi
        fi
    done
    
    if [ $error_count -gt 0 ]; then
        echo "üö´ –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò –í $error_count ASSEMBLY DEFINITIONS!"
        return 1
    else
        echo "‚úÖ –í–°–ï ASSEMBLY DEFINITIONS –ö–û–†–†–ï–ö–¢–ù–´!"
        return 0
    fi
}

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..."
echo ""

total_errors=0

if ! check_missing_files; then
    total_errors=$((total_errors + 1))
fi

if ! check_baker_classes; then
    total_errors=$((total_errors + 1))
fi

if ! check_assembly_definitions; then
    total_errors=$((total_errors + 1))
fi

echo ""
echo "üéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:"
if [ $total_errors -eq 0 ]; then
    echo "üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
    echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏"
    exit 0
else
    echo "üö´ –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò –í $total_errors –ö–ê–¢–ï–ì–û–†–ò–Ø–•!"
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∫–æ–º–ø–∏–ª—è—Ü–∏–µ–π"
    exit 1
fi
