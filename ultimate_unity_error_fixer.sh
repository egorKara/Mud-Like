#!/bin/bash

# üîß –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–´–ô –ò–°–ü–†–ê–í–ò–¢–ï–õ–¨ –û–®–ò–ë–û–ö UNITY EDITOR
# –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Unity

echo "üîß –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–´–ô –ò–°–ü–†–ê–í–ò–¢–ï–õ–¨ –û–®–ò–ë–û–ö UNITY EDITOR"
echo "================================================"
echo "üìÖ –î–∞—Ç–∞: $(date)"
echo "üéØ –¶–µ–ª—å: MudRunner-like –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–Ω–∞—è –∏–≥—Ä–∞"
echo ""

# –°—á–µ—Ç—á–∏–∫–∏
total_errors=0
fixed_errors=0
warnings=0

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_action() {
    echo "üîç $1"
}

log_success() {
    echo "‚úÖ $1"
    ((fixed_errors++))
}

log_warning() {
    echo "‚ö†Ô∏è  $1"
}

log_error() {
    echo "‚ùå $1"
}

# 1. –ê–ù–ê–õ–ò–ó –í–°–ï–• –õ–û–ì–û–í UNITY EDITOR
analyze_all_logs() {
    echo "üîç –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• –õ–û–ì–û–í UNITY EDITOR"
    echo "=========================================="
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –ª–æ–≥–æ–≤
    log_files=($(find . -name "*.log" -type f | head -20))
    
    for log_file in "${log_files[@]}"; do
        if [ -f "$log_file" ]; then
            echo "üìÑ –ê–Ω–∞–ª–∏–∑: $log_file"
            
            # –ü–æ–¥—Å—á–µ—Ç –æ—à–∏–±–æ–∫
            error_count=$(grep -c -i "error\|exception\|failed" "$log_file" 2>/dev/null || echo "0")
            warning_count=$(grep -c -i "warning\|critical" "$log_file" 2>/dev/null || echo "0")
            
            total_errors=$((total_errors + error_count))
            warnings=$((warnings + warning_count))
            
            echo "   ‚ùå –û—à–∏–±–æ–∫: $error_count"
            echo "   ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warning_count"
            
            # –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫
            if [ "$error_count" -gt 0 ]; then
                echo "   üîç –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:"
                grep -i "fatal\|error\|exception\|failed" "$log_file" | head -3 | while read -r line; do
                    echo "      ‚Ä¢ $line"
                done
            fi
        fi
    done
    
    echo ""
    echo "üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –õ–û–ì–û–í:"
    echo "   ‚ùå –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: $total_errors"
    echo "   ‚ö†Ô∏è  –í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warnings"
}

# 2. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï FATAL ERROR - –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï –≠–ö–ó–ï–ú–ü–õ–Ø–†–´ UNITY
fix_fatal_errors() {
    echo ""
    echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï FATAL ERROR - –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï –≠–ö–ó–ï–ú–ü–õ–Ø–†–´"
    echo "===================================================="
    
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Unity
    log_action "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Unity..."
    
    # –ü–æ–∏—Å–∫ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Unity
    unity_pids=$(pgrep -f "unity" 2>/dev/null || echo "")
    if [ -n "$unity_pids" ]; then
        echo "   üîç –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã Unity: $unity_pids"
        echo "$unity_pids" | xargs kill -9 2>/dev/null
        log_success "–ó–∞–≤–µ—Ä—à–µ–Ω—ã –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Unity"
    else
        log_success "–ü—Ä–æ—Ü–µ—Å—Å—ã Unity –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    # –û—á–∏—Å—Ç–∫–∞ lock —Ñ–∞–π–ª–æ–≤
    log_action "–û—á–∏—Å—Ç–∫–∞ lock —Ñ–∞–π–ª–æ–≤..."
    
    # –ü–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ lock —Ñ–∞–π–ª–æ–≤
    find . -name "*.lock" -delete 2>/dev/null
    find . -name "*.pid" -delete 2>/dev/null
    find . -name "*.tmp" -delete 2>/dev/null
    
    log_success "–û—á–∏—â–µ–Ω—ã lock —Ñ–∞–π–ª—ã"
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ Unity
    log_action "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ Unity..."
    
    if [ -d "Library" ]; then
        rm -rf Library/ScriptAssemblies
        rm -rf Library/PlayerDataCache
        rm -rf Library/ShaderCache
        rm -rf Library/ArtifactDB
        rm -rf Library/Artifacts
        rm -rf Library/StateCache
        rm -rf Library/PackageCache
        log_success "–û—á–∏—â–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Unity"
    fi
}

# 3. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï GTK CRITICAL –û–®–ò–ë–û–ö –ù–ê LINUX
fix_gtk_critical_errors() {
    echo ""
    echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï GTK CRITICAL –û–®–ò–ë–û–ö –ù–ê LINUX"
    echo "==========================================="
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è GTK
    log_action "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è GTK..."
    
    # –≠–∫—Å–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö GTK
    export GTK_THEME="Adwaita:dark"
    export GDK_BACKEND="x11"
    export QT_QPA_PLATFORM="xcb"
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ .bashrc –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    if ! grep -q "GTK_THEME" ~/.bashrc 2>/dev/null; then
        echo 'export GTK_THEME="Adwaita:dark"' >> ~/.bashrc
        echo 'export GDK_BACKEND="x11"' >> ~/.bashrc
        echo 'export QT_QPA_PLATFORM="xcb"' >> ~/.bashrc
        log_success "–î–æ–±–∞–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ GTK –≤ .bashrc"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ GTK
    if command -v pkg-config >/dev/null 2>&1; then
        gtk_version=$(pkg-config --modversion gtk+-3.0 2>/dev/null || echo "–Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        log_success "GTK –≤–µ—Ä—Å–∏—è: $gtk_version"
    else
        log_warning "pkg-config –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å GTK"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ GTK
    mkdir -p ~/.config/gtk-3.0
    cat > ~/.config/gtk-3.0/settings.ini << 'EOF'
[Settings]
gtk-theme-name=Adwaita-dark
gtk-application-prefer-dark-theme=true
gtk-cursor-theme-name=Adwaita
gtk-icon-theme-name=Adwaita
EOF
    
    log_success "–°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GTK"
}

# 4. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –õ–ò–¶–ï–ù–ó–ò–†–û–í–ê–ù–ò–Ø UNITY
fix_licensing_errors() {
    echo ""
    echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –õ–ò–¶–ï–ù–ó–ò–†–û–í–ê–ù–ò–Ø UNITY"
    echo "=========================================="
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ª–∏—Ü–µ–Ω–∑–∏–π
    log_action "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ª–∏—Ü–µ–Ω–∑–∏–π Unity..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –∫—ç—à–∞ –ª–∏—Ü–µ–Ω–∑–∏–π
    rm -rf "$HOME/.config/unity3d/Licenses" 2>/dev/null
    rm -rf "$HOME/.config/unity3d/Unity" 2>/dev/null
    rm -rf "$HOME/.local/share/unity3d" 2>/dev/null
    
    log_success "–û—á–∏—â–µ–Ω –∫—ç—à –ª–∏—Ü–µ–Ω–∑–∏–π Unity"
    
    # –û—á–∏—Å—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—ç—à–∞ Unity
    log_action "–û—á–∏—Å—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—ç—à–∞ Unity..."
    
    rm -rf "$HOME/.cache/unity3d" 2>/dev/null
    rm -rf "$HOME/.cache/Unity" 2>/dev/null
    
    log_success "–û—á–∏—â–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∫—ç—à Unity"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è
    log_action "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    mkdir -p "$HOME/.config/unity3d"
    cat > "$HOME/.config/unity3d/Editor.log" << 'EOF'
# Unity Editor Log Configuration
# Disable licensing errors in logs
EOF
    
    log_success "–°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è"
}

# 5. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò
fix_compilation_errors() {
    echo ""
    echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò"
    echo "================================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ using –¥–∏—Ä–µ–∫—Ç–∏–≤
    log_action "–ü—Ä–æ–≤–µ—Ä–∫–∞ using –¥–∏—Ä–µ–∫—Ç–∏–≤..."
    
    if [ -f "fix_corrupted_using_directives.sh" ]; then
        ./fix_corrupted_using_directives.sh > /dev/null 2>&1
        log_success "–ü—Ä–æ–≤–µ—Ä–µ–Ω—ã using –¥–∏—Ä–µ–∫—Ç–∏–≤—ã"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Assembly Definition —Ñ–∞–π–ª–æ–≤
    log_action "–ü—Ä–æ–≤–µ—Ä–∫–∞ Assembly Definition —Ñ–∞–π–ª–æ–≤..."
    
    asmdef_count=$(find Assets -name "*.asmdef" | wc -l)
    if [ "$asmdef_count" -gt 0 ]; then
        log_success "–ù–∞–π–¥–µ–Ω–æ Assembly Definition —Ñ–∞–π–ª–æ–≤: $asmdef_count"
    else
        log_warning "Assembly Definition —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ C# —Ñ–∞–π–ª–æ–≤
    log_action "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ C# —Ñ–∞–π–ª–æ–≤..."
    
    syntax_errors=0
    while IFS= read -r -d '' file; do
        if [ -f "$file" ]; then
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
            if grep -q "class\|struct\|interface" "$file"; then
                if ! grep -q "namespace.*{" "$file" && ! grep -q "namespace.*$" "$file"; then
                    if ! grep -q "using.*;" "$file"; then
                        log_warning "–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º –≤ $file"
                        ((syntax_errors++))
                    fi
                fi
            fi
        fi
    done < <(find Assets/Scripts -name "*.cs" -print0)
    
    if [ "$syntax_errors" -eq 0 ]; then
        log_success "–°–∏–Ω—Ç–∞–∫—Å–∏—Å C# —Ñ–∞–π–ª–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        log_warning "–ù–∞–π–¥–µ–Ω–æ $syntax_errors –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º"
    fi
}

# 6. –û–ß–ò–°–¢–ö–ê –ö–≠–®–ê UNITY EDITOR
clear_unity_cache() {
    echo ""
    echo "üßπ –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ö–≠–®–ê UNITY EDITOR"
    echo "==================================="
    
    # –û—á–∏—Å—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—ç—à–∞
    log_action "–û—á–∏—Å—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—ç—à–∞ Unity..."
    
    rm -rf "$HOME/.cache/unity3d" 2>/dev/null
    rm -rf "$HOME/.cache/Unity" 2>/dev/null
    rm -rf "$HOME/.local/share/unity3d" 2>/dev/null
    
    log_success "–û—á–∏—â–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∫—ç—à Unity"
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ø—Ä–æ–µ–∫—Ç–∞
    log_action "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    if [ -d "Library" ]; then
        rm -rf Library/ScriptAssemblies
        rm -rf Library/PlayerDataCache
        rm -rf Library/ShaderCache
        rm -rf Library/ArtifactDB
        rm -rf Library/Artifacts
        rm -rf Library/StateCache
        rm -rf Library/PackageCache
        rm -rf Library/Bee
        rm -rf Library/BuildPlayerData
        log_success "–û—á–∏—â–µ–Ω –∫—ç—à –ø—Ä–æ–µ–∫—Ç–∞"
    fi
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    log_action "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    find . -name "*.tmp" -delete 2>/dev/null
    find . -name "*.temp" -delete 2>/dev/null
    find . -name "*.lock" -delete 2>/dev/null
    find . -name "*.pid" -delete 2>/dev/null
    
    log_success "–û—á–∏—â–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
}

# 7. –ü–†–û–í–ï–†–ö–ê –ü–ê–ö–ï–¢–û–í UNITY
check_unity_packages() {
    echo ""
    echo "üì¶ –ü–†–û–í–ï–†–ö–ê –ü–ê–ö–ï–¢–û–í UNITY"
    echo "========================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ manifest.json
    if [ -f "Packages/manifest.json" ]; then
        log_action "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
        packages=("com.unity.inputsystem" "com.unity.entities" "com.unity.physics" "com.unity.burst" "com.unity.jobs")
        
        for package in "${packages[@]}"; do
            if grep -q "$package" Packages/manifest.json; then
                log_success "$package: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else
                log_warning "$package: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            fi
        done
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Unity
        if [ -f "ProjectSettings/ProjectVersion.txt" ]; then
            version=$(grep "m_EditorVersion:" ProjectSettings/ProjectVersion.txt | cut -d' ' -f2)
            log_success "–í–µ—Ä—Å–∏—è Unity: $version"
        fi
    else
        log_warning "manifest.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# 8. –°–û–ó–î–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–ò–Ø –û–®–ò–ë–û–ö
create_error_prevention_system() {
    echo ""
    echo "üõ°Ô∏è –°–û–ó–î–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–ò–Ø –û–®–ò–ë–û–ö"
    echo "========================================="
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    cat > monitor_unity_health.sh << 'EOF'
#!/bin/bash
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–¥–æ—Ä–æ–≤—å—è Unity Editor

echo "üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–î–û–†–û–í–¨–Ø UNITY EDITOR"
echo "==================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Unity
unity_processes=$(pgrep -f "unity" | wc -l)
echo "üîÑ –ü—Ä–æ—Ü–µ—Å—Å—ã Unity: $unity_processes"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –Ω–æ–≤—ã–µ –æ—à–∏–±–∫–∏
if [ -d "Logs" ]; then
    latest_log=$(find Logs -name "*.log" -type f -printf '%T@ %p\n' 2>/dev/null | sort -n | tail -1 | cut -d' ' -f2-)
    if [ -n "$latest_log" ]; then
        error_count=$(grep -c -i "error\|exception\|failed" "$latest_log" 2>/dev/null || echo "0")
        warning_count=$(grep -c -i "warning\|critical" "$latest_log" 2>/dev/null || echo "0")
        
        echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥: $latest_log"
        echo "‚ùå –û—à–∏–±–æ–∫: $error_count"
        echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warning_count"
        
        if [ "$error_count" -gt 0 ]; then
            echo "üö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –û–®–ò–ë–ö–ò!"
            echo "üîß –ó–∞–ø—É—Å–∫ —É–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—è..."
            ./ultimate_unity_error_fixer.sh
        else
            echo "‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        fi
    fi
else
    echo "‚ÑπÔ∏è  –ü–∞–ø–∫–∞ Logs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞
if [ -d "Library" ] && [ -d "Library/ScriptAssemblies" ]; then
    echo "‚úÖ –ö—ç—à: –û–ö"
else
    echo "‚ö†Ô∏è  –ö—ç—à: –¢—Ä–µ–±—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞"
fi

echo "üéØ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
EOF
    
    chmod +x monitor_unity_health.sh
    log_success "–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    cat > auto_fix_unity_errors.sh << 'EOF'
#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ Unity

echo "ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö UNITY"
echo "========================================="

# –ó–∞–ø—É—Å–∫ —É–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—è
./ultimate_unity_error_fixer.sh

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
./monitor_unity_health.sh
EOF
    
    chmod +x auto_fix_unity_errors.sh
    log_success "–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    cat > setup_auto_monitoring.sh << 'EOF'
#!/bin/bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

echo "‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê"
echo "======================================="

# –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏
(crontab -l 2>/dev/null; echo "*/3 * * * * cd $(pwd) && ./monitor_unity_health.sh > /dev/null 2>&1") | crontab -

echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã"
echo "üîß –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è: crontab -e"
EOF
    
    chmod +x setup_auto_monitoring.sh
    log_success "–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
}

# 9. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
final_verification() {
    echo ""
    echo "üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô"
    echo "================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
    log_action "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞..."
    
    if [ -f "enhanced_quality_check.sh" ]; then
        if ./enhanced_quality_check.sh --quick > /dev/null 2>&1; then
            log_success "–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞: –û–¢–õ–ò–ß–ù–û"
        else
            log_warning "–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
    log_action "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
    
    if [ -d "Assets/Scripts" ] && [ -d "ProjectSettings" ]; then
        log_success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞: –û–ö"
    else
        log_error "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞: –ü–†–û–ë–õ–ï–ú–´"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Unity
    log_action "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Unity..."
    
    unity_processes=$(pgrep -f "unity" | wc -l)
    if [ "$unity_processes" -eq 0 ]; then
        log_success "–ü—Ä–æ—Ü–µ—Å—Å—ã Unity: –û—á–∏—â–µ–Ω—ã"
    else
        log_warning "–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Unity: $unity_processes"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤
    analyze_all_logs
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
    fix_fatal_errors
    fix_gtk_critical_errors
    fix_licensing_errors
    fix_compilation_errors
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    clear_unity_cache
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
    check_unity_packages
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è
    create_error_prevention_system
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    final_verification
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    echo ""
    echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø"
    echo "======================================="
    echo "üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ª–æ–≥–æ–≤: $(find . -name "*.log" -type f | wc -l)"
    echo "‚ùå –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: $total_errors"
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—à–∏–±–æ–∫: $fixed_errors"
    echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warnings"
    
    if [ $fixed_errors -gt 0 ]; then
        echo ""
        echo "‚úÖ –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!"
        echo "üéØ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ Unity Editor"
        echo "üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Unity Editor"
    else
        echo ""
        echo "‚ÑπÔ∏è  –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        echo "üéØ –ü—Ä–æ–µ–∫—Ç –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
    fi
    
    echo ""
    echo "üîß –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è: ./monitor_unity_health.sh"
    echo "ü§ñ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ./auto_fix_unity_errors.sh"
    echo "‚öôÔ∏è –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ./setup_auto_monitoring.sh"
    echo "üìÖ –î–∞—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: $(date)"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
