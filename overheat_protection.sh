#!/bin/bash

# üö® –ê–í–¢–û–ù–û–ú–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê –ù–û–£–¢–ë–£–ö–ê üö®
# –†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç Unity –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã Linux

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
WARNING_TEMP=70      # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
CRITICAL_TEMP=80     # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞  
EMERGENCY_TEMP=90    # –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
MONITOR_INTERVAL=2   # –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Å–µ–∫—É–Ω–¥—ã)
EMERGENCY_COOLDOWN=10 # –í—Ä–µ–º—è –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ (—Å–µ–∫—É–Ω–¥—ã)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
WARNING_COUNT=0
CRITICAL_COUNT=0
EMERGENCY_COUNT=0
LAST_EMERGENCY_TIME=""

# –§–ª–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
IS_RUNNING=false
IS_EMERGENCY_MODE=false

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã CPU
get_cpu_temperature() {
    local temp=0
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∏–∑ thermal zones
    if [ -d "/sys/class/thermal" ]; then
        for thermal_zone in /sys/class/thermal/thermal_zone*; do
            if [ -f "$thermal_zone/temp" ]; then
                local zone_temp=$(cat "$thermal_zone/temp" 2>/dev/null)
                if [ -n "$zone_temp" ] && [ "$zone_temp" -gt 0 ] && [ "$zone_temp" -lt 200000 ]; then
                    temp=$((zone_temp / 1000))
                    break
                fi
            fi
        done
    fi
    
    # –ï—Å–ª–∏ —Ä–µ–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ü–µ–Ω–∏–≤–∞–µ–º –ø–æ –Ω–∞–≥—Ä—É–∑–∫–µ
    if [ "$temp" -eq 0 ]; then
        local cpu_load=$(get_cpu_load)
        local base_temp=45
        local load_factor=$((cpu_load * 25 / 100))
        temp=$((base_temp + load_factor))
    fi
    
    echo "$temp"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ CPU
get_cpu_load() {
    local load=0
    
    # –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ htop
    if command -v htop >/dev/null 2>&1; then
        local htop_output=$(timeout 3s htop -n 1 -d 1 2>/dev/null | grep -E "Cpu\(s\):|CPU:" | head -1)
        if [ -n "$htop_output" ]; then
            load=$(echo "$htop_output" | grep -oE '[0-9]+\.[0-9]+%' | head -1 | sed 's/%//' | cut -d. -f1)
        fi
    fi
    
    # Fallback –∫ /proc/loadavg
    if [ "$load" -eq 0 ] && [ -f "/proc/loadavg" ]; then
        local load_avg=$(cat /proc/loadavg | awk '{print $1}')
        local cpu_cores=$(nproc)
        load=$(echo "$load_avg $cpu_cores" | awk '{printf "%.0f", ($1/$2)*100}')
        if [ "$load" -gt 100 ]; then
            load=100
        fi
    fi
    
    echo "$load"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
get_system_info() {
    local cpu_model="Unknown"
    local cpu_cores=$(nproc)
    local cpu_load=$(get_cpu_load)
    local cpu_temp=$(get_cpu_temperature)
    
    # –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª—å CPU
    if [ -f "/proc/cpuinfo" ]; then
        cpu_model=$(grep "model name" /proc/cpuinfo | head -1 | cut -d: -f2 | sed 's/^[ \t]*//')
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–º—è—Ç–∏
    local mem_total=0
    local mem_available=0
    if [ -f "/proc/meminfo" ]; then
        mem_total=$(grep "MemTotal" /proc/meminfo | awk '{print $2}')
        mem_available=$(grep "MemAvailable" /proc/meminfo | awk '{print $2}')
    fi
    
    local mem_used=$((mem_total - mem_available))
    local mem_usage=0
    if [ "$mem_total" -gt 0 ]; then
        mem_usage=$((mem_used * 100 / mem_total))
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
    local uptime_hours=0
    if [ -f "/proc/uptime" ]; then
        local uptime_seconds=$(cat /proc/uptime | awk '{print $1}')
        uptime_hours=$(echo "$uptime_seconds" | awk '{printf "%.1f", $1/3600}')
    fi
    
    echo "CPU: $cpu_model"
    echo "Cores: $cpu_cores"
    echo "Load: ${cpu_load}%"
    echo "Temperature: ${cpu_temp}¬∞C"
    echo "RAM: ${mem_used}KB / ${mem_total}KB (${mem_usage}%)"
    echo "Uptime: ${uptime_hours}h"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∞–ª–µ—Ä—Ç–∞
show_alert() {
    local level="$1"
    local message="$2"
    local temp="$3"
    
    case "$level" in
        "WARNING")
            echo -e "${YELLOW}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: $message${NC}"
            ;;
        "CRITICAL")
            echo -e "${RED}üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê: $message${NC}"
            ;;
        "EMERGENCY")
            echo -e "${RED}üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê: $message${NC}"
            ;;
    esac
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∞–ª–µ—Ä—Ç
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${RED}  –í–ù–ò–ú–ê–ù–ò–ï! –í–´–°–û–ö–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê CPU: ${temp}¬∞C${NC}"
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º—è–≥–∫–∏—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã
apply_soft_measures() {
    echo -e "${YELLOW}üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º—è–≥–∫–∏—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã...${NC}"
    
    # –°–Ω–∏–∂–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç—è–∂–µ–ª—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    for process in Unity Cursor code; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +5 "$pid" 2>/dev/null; then
                    echo "–°–Ω–∏–∂–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    sync
    
    echo "–ú—è–≥–∫–∏–µ –º–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã
apply_aggressive_measures() {
    echo -e "${RED}üî• –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã...${NC}"
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    for process in Unity Cursor code; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +10 "$pid" 2>/dev/null; then
                    echo "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∂–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    sync
    
    echo "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –º–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã
apply_emergency_measures() {
    echo -e "${RED}üö® –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –≠–ö–°–¢–†–ï–ù–ù–´–• –ú–ï–† –ó–ê–©–ò–¢–´!${NC}"
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞
    echo -e "${RED}‚è∏Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥...${NC}"
    sleep 5
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    for process in Unity Cursor code; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +19 "$pid" 2>/dev/null; then
                    echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    sync
    
    echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
check_temperature() {
    local temp=$(get_cpu_temperature)
    
    if [ "$temp" -le 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É CPU${NC}"
        return
    fi
    
    echo -e "${CYAN}üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU: ${temp}¬∞C${NC}"
    
    if [ "$temp" -ge "$EMERGENCY_TEMP" ]; then
        handle_emergency_temperature "$temp"
    elif [ "$temp" -ge "$CRITICAL_TEMP" ]; then
        handle_critical_temperature "$temp"
    elif [ "$temp" -ge "$WARNING_TEMP" ]; then
        handle_warning_temperature "$temp"
    else
        # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –Ω–æ—Ä–º–µ
        if [ "$IS_EMERGENCY_MODE" = true ]; then
            echo -e "${GREEN}üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª–∞—Å—å, –≤—ã—Ö–æ–¥ –∏–∑ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞${NC}"
            IS_EMERGENCY_MODE=false
        fi
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
handle_warning_temperature() {
    local temp="$1"
    WARNING_COUNT=$((WARNING_COUNT + 1))
    
    show_alert "WARNING" "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU ${temp}¬∞C (—Å—á–µ—Ç—á–∏–∫: $WARNING_COUNT)" "$temp"
    apply_soft_measures
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
handle_critical_temperature() {
    local temp="$1"
    CRITICAL_COUNT=$((CRITICAL_COUNT + 1))
    
    show_alert "CRITICAL" "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${temp}¬∞C (—Å—á–µ—Ç—á–∏–∫: $CRITICAL_COUNT)" "$temp"
    apply_aggressive_measures
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
handle_emergency_temperature() {
    local temp="$1"
    EMERGENCY_COUNT=$((EMERGENCY_COUNT + 1))
    LAST_EMERGENCY_TIME=$(date '+%Y-%m-%d %H:%M:%S')
    IS_EMERGENCY_MODE=true
    
    show_alert "EMERGENCY" "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${temp}¬∞C (—Å—á–µ—Ç—á–∏–∫: $EMERGENCY_COUNT)" "$temp"
    apply_emergency_measures
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_stats() {
    echo
    echo -e "${BLUE}üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê${NC}"
    echo -e "${BLUE}==========================================${NC}"
    echo "–°—Ç–∞—Ç—É—Å: $([ "$IS_RUNNING" = true ] && echo -e "${GREEN}üü¢ –ê–∫—Ç–∏–≤–Ω–∞${NC}" || echo -e "${RED}üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}")"
    echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º: $([ "$IS_EMERGENCY_MODE" = true ] && echo -e "${RED}üö® –î–ê${NC}" || echo -e "${GREEN}‚úÖ –ù–ï–¢${NC}")"
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNING_COUNT"
    echo "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã: $CRITICAL_COUNT"
    echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã: $EMERGENCY_COUNT"
    
    if [ -n "$LAST_EMERGENCY_TIME" ]; then
        echo "–ü–æ—Å–ª–µ–¥–Ω—è—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è: $LAST_EMERGENCY_TIME"
    else
        echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π –Ω–µ –±—ã–ª–æ"
    fi
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
reset_stats() {
    WARNING_COUNT=0
    CRITICAL_COUNT=0
    EMERGENCY_COUNT=0
    LAST_EMERGENCY_TIME=""
    echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±—Ä–æ—à–µ–Ω–∞${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo
    echo -e "${PURPLE}‚ùì –°–ü–†–ê–í–ö–ê –ü–û –°–ò–°–¢–ï–ú–ï –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê${NC}"
    echo -e "${PURPLE}==========================================${NC}"
    echo "–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É CPU –∏"
    echo "–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–µ—Ä—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –Ω–æ—É—Ç–±—É–∫–∞."
    echo
    echo "–£—Ä–æ–≤–Ω–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã:"
    echo -e "  ${YELLOW}‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: 70¬∞C+ - –ú—è–≥–∫–∏–µ –º–µ—Ä—ã${NC}"
    echo -e "  ${RED}üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è: 80¬∞C+ - –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –º–µ—Ä—ã${NC}"
    echo -e "  ${RED}üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è: 90¬∞C+ - –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã${NC}"
    echo
    echo "–ú–µ—Ä—ã –∑–∞—â–∏—Ç—ã:"
    echo "  ‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo "  ‚Ä¢ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∫—ç—à–∞"
    echo "  ‚Ä¢ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—É–∑—ã –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ"
    echo
    echo "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    echo "  Ctrl+C - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo "  's' - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'r' - –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'i' - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "  'h' - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
show_system_info() {
    echo
    echo -e "${CYAN}üíª –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï${NC}"
    echo -e "${CYAN}=======================${NC}"
    get_system_info
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
cleanup() {
    echo
    echo -e "${YELLOW}üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...${NC}"
    IS_RUNNING=false
    echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    exit 0
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${GREEN}üö® –ê–í–¢–û–ù–û–ú–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê –ù–û–£–¢–ë–£–ö–ê üö®${NC}"
    echo -e "${GREEN}==================================================${NC}"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç...${NC}"
    
    local utilities=""
    [ -f "/usr/bin/htop" ] && utilities="$utilities htop"
    [ -f "/usr/bin/top" ] && utilities="$utilities top"
    [ -f "/proc/cpuinfo" ] && utilities="$utilities /proc/cpuinfo"
    [ -f "/proc/meminfo" ] && utilities="$utilities /proc/meminfo"
    [ -f "/proc/loadavg" ] && utilities="$utilities /proc/loadavg"
    [ -f "/proc/uptime" ] && utilities="$utilities /proc/uptime"
    [ -d "/sys/class/thermal" ] && utilities="$utilities /sys/class/thermal"
    
    if [ -n "$utilities" ]; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã:$utilities${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.${NC}"
    fi
    
    echo
    echo -e "${GREEN}üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π:${NC}"
    echo "  's' - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'r' - –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'i' - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "  'h' - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    echo "  Ctrl+C - –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    IS_RUNNING=true
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã...${NC}"
    echo
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    while [ "$IS_RUNNING" = true ]; do
        check_temperature
        
        # –ï—Å–ª–∏ –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ, –∂–¥–µ–º –¥–æ–ª—å—à–µ
        if [ "$IS_EMERGENCY_MODE" = true ]; then
            sleep "$EMERGENCY_COOLDOWN"
        else
            sleep "$MONITOR_INTERVAL"
        fi
    done
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
main "$@"