#!/bin/bash

# üö® –ê–í–¢–û–ù–û–ú–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê –ù–û–£–¢–ë–£–ö–ê üö®
# –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –Ω–∞—Ä–∞–±–æ—Ç–∫–∞—Ö Unity OverheatProtectionSystem –∏ SystemInfoIntegration
# –†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç Unity –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π

# –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Ä–æ–≥–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∏–∑ OverheatProtectionSystem.cs)
CRITICAL_TEMP_THRESHOLD=85    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU
WARNING_TEMP_THRESHOLD=75     # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–≥—Ä–µ–≤–µ  
SAFE_TEMP_THRESHOLD=65        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞

# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è Unity Editor
UNITY_EDITOR_CPU_LIMIT=95     # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ CPU –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ Unity Editor
UNITY_EDITOR_GPU_LIMIT=95     # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ GPU –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ Unity Editor

# –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã
MAX_CPU_LOAD_THRESHOLD=100    # –ü–æ—Ä–æ–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ CPU
MAX_GPU_LOAD_THRESHOLD=100    # –ü–æ—Ä–æ–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ GPU
REDUCE_TO_CPU_LOAD=95         # –°–Ω–∏–∂–µ–Ω–∏–µ CPU –Ω–∞–≥—Ä—É–∑–∫–∏ –¥–æ —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è
REDUCE_TO_GPU_LOAD=95         # –°–Ω–∏–∂–µ–Ω–∏–µ GPU –Ω–∞–≥—Ä—É–∑–∫–∏ –¥–æ —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã (–∏–∑ OverheatProtectionSystem.cs)
TEMP_CHECK_INTERVAL=1         # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
EMERGENCY_COOLDOWN_TIME=5     # –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥
MAX_FPS_EMERGENCY=15          # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π FPS –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
MAX_FPS_WARNING=30            # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π FPS –ø—Ä–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
WARNING_COUNT=0
CRITICAL_COUNT=0
EMERGENCY_COUNT=0
LAST_EMERGENCY_TIME=""

# –§–ª–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
IS_RUNNING=false
IS_EMERGENCY_MODE=false

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã CPU (—É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º–∏ –¥–∞—Ç—á–∏–∫–∞–º–∏)
get_cpu_temperature() {
    local temp=0
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∏–∑ thermal zones
    if [ -d "/sys/class/thermal" ]; then
        for thermal_zone in /sys/class/thermal/thermal_zone*; do
            if [ -f "$thermal_zone/temp" ]; then
                local zone_temp=$(cat "$thermal_zone/temp" 2>/dev/null)
                if [ -n "$zone_temp" ] && [ "$zone_temp" -gt 0 ] && [ "$zone_temp" -lt 200000 ]; then
                    temp=$((zone_temp / 1000))
                    echo "[SystemInfo] –ù–∞–π–¥–µ–Ω–∞ —Ä–µ–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C" >&2
                    break
                fi
            fi
        done
    fi
    
    # Fallback: —É–ª—É—á—à–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –¥–∞—Ç—á–∏–∫–æ–≤ CPU –∏ GPU
    if [ "$temp" -eq 0 ]; then
        temp=$(estimate_temperature_from_parallel_sensors)
    fi
    
    echo "$temp"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Unity Editor
is_unity_editor_running() {
    local unity_processes=$(pgrep -f "Unity.*Editor" 2>/dev/null | wc -l)
    if [ "$unity_processes" -gt 0 ]; then
        echo "true"
    else
        echo "false"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ GPU
get_gpu_load() {
    local gpu_load=0
    
    # –ü—Ä–æ–±—É–µ–º nvidia-smi (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    if command -v nvidia-smi >/dev/null 2>&1; then
        local nvidia_output=$(timeout 3s nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits 2>/dev/null)
        if [ -n "$nvidia_output" ]; then
            gpu_load=$(echo "$nvidia_output" | head -1 | tr -d ' ')
            echo "[GPU] nvidia-smi –∑–∞–≥—Ä—É–∑–∫–∞: ${gpu_load}%" >&2
        fi
    fi
    
    # Fallback: –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ OpenGL/GPU
    if [ "$gpu_load" -eq 0 ]; then
        gpu_load=$(estimate_gpu_load_from_processes)
    fi
    
    echo "$gpu_load"
}

# –û—Ü–µ–Ω–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ GPU –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
estimate_gpu_load_from_processes() {
    local gpu_processes=0
    local total_processes=0
    
    # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GPU
    for process in Unity Cursor code firefox chrome; do
        local count=$(pgrep "$process" 2>/dev/null | wc -l)
        total_processes=$((total_processes + count))
        if [ "$count" -gt 0 ]; then
            gpu_processes=$((gpu_processes + count))
        fi
    done
    
    # –û—Ü–µ–Ω–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É GPU –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    local estimated_load=0
    if [ "$total_processes" -gt 0 ]; then
        estimated_load=$((gpu_processes * 100 / total_processes))
    fi
    
    echo "[GPU] –û—Ü–µ–Ω–æ—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞: ${estimated_load}% (–ø—Ä–æ—Ü–µ—Å—Å—ã: ${gpu_processes}/${total_processes})" >&2
    echo "$estimated_load"
}

# –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –¥–∞—Ç—á–∏–∫–æ–≤ CPU –∏ GPU
estimate_temperature_from_parallel_sensors() {
    local cpu_load=$(get_cpu_load)
    local gpu_load=$(get_gpu_load)
    local base_temp=45  # –ë–∞–∑–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    
    # –í–∑–≤–µ—à–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: CPU –≤–ª–∏—è–µ—Ç –±–æ–ª—å—à–µ, –Ω–æ GPU —Ç–æ–∂–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è
    local cpu_factor=$((cpu_load * 30 / 100))  # CPU: 30% –≤–ª–∏—è–Ω–∏—è
    local gpu_factor=$((gpu_load * 20 / 100))  # GPU: 20% –≤–ª–∏—è–Ω–∏—è
    local combined_load=$((cpu_load + gpu_load))
    local combined_factor=$((combined_load * 15 / 100))  # –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞: 15% –≤–ª–∏—è–Ω–∏—è
    
    local estimated_temp=$((base_temp + cpu_factor + gpu_factor + combined_factor))
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
    if [ "$estimated_temp" -gt 95 ]; then
        estimated_temp=95
    fi
    
    echo "[SystemInfo] –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –¥–∞—Ç—á–∏–∫–∏ - CPU: ${cpu_load}%, GPU: ${gpu_load}%, –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${estimated_temp}¬∞C" >&2
    echo "$estimated_temp"
}

# –û—Ü–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–≥—Ä—É–∑–∫–∏ (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
estimate_temperature_from_load() {
    local cpu_load=$(get_cpu_load)
    local base_temp=45  # –ë–∞–∑–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    local load_factor=$((cpu_load * 25 / 100))
    local estimated_temp=$((base_temp + load_factor))
    
    echo "[SystemInfo] –û—Ü–µ–Ω–æ—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${estimated_temp}¬∞C (–Ω–∞–≥—Ä—É–∑–∫–∞: ${cpu_load}%)" >&2
    echo "$estimated_temp"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ CPU (–∏–∑ SystemInfoIntegration.cs)
get_cpu_load() {
    local load=0
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º htop –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ CPU (–∫–∞–∫ –≤ SystemInfoIntegration.cs)
    if command -v htop >/dev/null 2>&1; then
        local htop_output=$(timeout 3s htop -n 1 -d 1 2>/dev/null | grep -E "Cpu\(s\):|CPU:" | head -1)
        if [ -n "$htop_output" ]; then
            load=$(echo "$htop_output" | grep -oE '[0-9]+\.[0-9]+%' | head -1 | sed 's/%//' | cut -d. -f1)
        fi
    fi
    
    # Fallback –∫ /proc/loadavg (–∫–∞–∫ –≤ SystemInfoIntegration.cs)
    if [ "$load" -eq 0 ]; then
        load=$(get_cpu_load_from_proc)
    fi
    
    echo "$load"
}

# –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É CPU –∏–∑ /proc/loadavg (–∏–∑ SystemInfoIntegration.cs)
get_cpu_load_from_proc() {
    local load=0
    
    if [ -f "/proc/loadavg" ]; then
        local load_avg=$(cat /proc/loadavg | awk '{print $1}')
        local cpu_cores=$(nproc)
        load=$(echo "$load_avg $cpu_cores" | awk '{printf "%.0f", ($1/$2)*100}')
        if [ "$load" -gt 100 ]; then
            load=100
        fi
    fi
    
    echo "$load"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ (—É–ª—É—á—à–µ–Ω–Ω–∞—è —Å GPU)
get_system_info() {
    local cpu_model="Unknown"
    local cpu_cores=$(nproc)
    local cpu_load=$(get_cpu_load)
    local gpu_load=$(get_gpu_load)
    local cpu_temp=$(get_cpu_temperature)
    
    # –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª—å CPU
    if [ -f "/proc/cpuinfo" ]; then
        cpu_model=$(grep "model name" /proc/cpuinfo | head -1 | cut -d: -f2 | sed 's/^[ \t]*//')
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ GPU
    local gpu_info="Unknown"
    if command -v nvidia-smi >/dev/null 2>&1; then
        gpu_info=$(timeout 3s nvidia-smi --query-gpu=name --format=csv,noheader 2>/dev/null | head -1)
    elif [ -f "/proc/driver/nvidia/version" ]; then
        gpu_info="NVIDIA (–¥—Ä–∞–π–≤–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)"
    else
        gpu_info="–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è/–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è"
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–º—è—Ç–∏
    local mem_total=0
    local mem_available=0
    if [ -f "/proc/meminfo" ]; then
        mem_total=$(grep "MemTotal" /proc/meminfo | awk '{print $2}')
        mem_available=$(grep "MemAvailable" /proc/meminfo | awk '{print $2}')
    fi
    
    local mem_used=$((mem_total - mem_available))
    local mem_usage=0
    if [ "$mem_total" -gt 0 ]; then
        mem_usage=$((mem_used * 100 / mem_total))
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
    local uptime_hours=0
    if [ -f "/proc/uptime" ]; then
        local uptime_seconds=$(cat /proc/uptime | awk '{print $1}')
        uptime_hours=$(echo "$uptime_seconds" | awk '{printf "%.1f", $1/3600}')
    fi
    
    echo "CPU: $cpu_model"
    echo "Cores: $cpu_cores"
    echo "CPU Load: ${cpu_load}%"
    echo "GPU: $gpu_info"
    echo "GPU Load: ${gpu_load}%"
    echo "Temperature: ${cpu_temp}¬∞C (–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –¥–∞—Ç—á–∏–∫–∏)"
    echo "RAM: ${mem_used}KB / ${mem_total}KB (${mem_usage}%)"
    echo "Uptime: ${uptime_hours}h"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∞–ª–µ—Ä—Ç–∞
show_alert() {
    local level="$1"
    local message="$2"
    local temp="$3"
    
    case "$level" in
        "WARNING")
            echo -e "${YELLOW}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: $message${NC}"
            ;;
        "CRITICAL")
            echo -e "${RED}üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê: $message${NC}"
            ;;
        "EMERGENCY")
            echo -e "${RED}üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê: $message${NC}"
            ;;
    esac
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∞–ª–µ—Ä—Ç
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${RED}  –í–ù–ò–ú–ê–ù–ò–ï! –í–´–°–û–ö–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê CPU: ${temp}¬∞C${NC}"
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º—è–≥–∫–∏—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã
apply_soft_measures() {
    echo -e "${YELLOW}üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º—è–≥–∫–∏—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã...${NC}"
    
    # –°–Ω–∏–∂–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç—è–∂–µ–ª—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    for process in Unity Cursor code; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +5 "$pid" 2>/dev/null; then
                    echo "–°–Ω–∏–∂–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    sync
    
    echo "–ú—è–≥–∫–∏–µ –º–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã
apply_aggressive_measures() {
    echo -e "${RED}üî• –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã...${NC}"
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    for process in Unity Cursor code; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +10 "$pid" 2>/dev/null; then
                    echo "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∂–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    sync
    
    echo "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –º–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã
apply_emergency_measures() {
    echo -e "${RED}üö® –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –≠–ö–°–¢–†–ï–ù–ù–´–• –ú–ï–† –ó–ê–©–ò–¢–´!${NC}"
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞
    echo -e "${RED}‚è∏Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥...${NC}"
    sleep 5
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    for process in Unity Cursor code; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +19 "$pid" 2>/dev/null; then
                    echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    sync
    
    echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –ú–µ—Ä—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 100%
apply_load_reduction_measures() {
    local cpu_load="$1"
    local gpu_load="$2"
    
    echo -e "${YELLOW}üîß –°–ù–ò–ñ–ï–ù–ò–ï –ù–ê–ì–†–£–ó–ö–ò –° 100% –î–û 95%${NC}"
    echo -e "${YELLOW}   CPU: ${cpu_load}% ‚Üí ${REDUCE_TO_CPU_LOAD}%${NC}"
    echo -e "${YELLOW}   GPU: ${gpu_load}% ‚Üí ${REDUCE_TO_GPU_LOAD}%${NC}"
    
    # –°–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Ç—è–∂–µ–ª—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    for process in Unity Cursor code firefox chrome; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +10 "$pid" 2>/dev/null; then
                    echo "–°–Ω–∏–∂–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid) –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏
    echo -e "${YELLOW}‚è∏Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏...${NC}"
    sleep 2
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    sync
    
    echo -e "${GREEN}‚úÖ –ù–∞–≥—Ä—É–∑–∫–∞ —Å–Ω–∏–∂–µ–Ω–∞ —Å 100% –¥–æ 95%${NC}"
}

# –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã –¥–ª—è Unity Editor –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤
apply_unity_editor_emergency_measures() {
    local cpu_load="$1"
    local gpu_load="$2"
    
    echo -e "${RED}üö® –≠–ö–°–¢–†–ï–ù–ù–´–ï –ú–ï–†–´ –î–õ–Ø UNITY EDITOR!${NC}"
    echo -e "${RED}   CPU: ${cpu_load}% > ${UNITY_EDITOR_CPU_LIMIT}%${NC}"
    echo -e "${RED}   GPU: ${gpu_load}% > ${UNITY_EDITOR_GPU_LIMIT}%${NC}"
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ Unity Editor
    echo -e "${RED}‚è∏Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ Unity Editor –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã...${NC}"
    local unity_pids=$(pgrep -f "Unity.*Editor" 2>/dev/null)
    if [ -n "$unity_pids" ]; then
        for pid in $unity_pids; do
            if kill -STOP "$pid" 2>/dev/null; then
                echo "Unity Editor (PID: $pid) –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            fi
        done
        sleep 3
        for pid in $unity_pids; do
            if kill -CONT "$pid" 2>/dev/null; then
                echo "Unity Editor (PID: $pid) –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω"
            fi
        done
    fi
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ Unity Editor
    for pid in $unity_pids; do
        if renice +19 "$pid" 2>/dev/null; then
            echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è Unity Editor (PID: $pid)"
        fi
    done
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –¥—Ä—É–≥–∏—Ö —Ç—è–∂–µ–ª—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    for process in Cursor code firefox chrome; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +15 "$pid" 2>/dev/null; then
                    echo "–°–Ω–∏–∂–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    sync
    
    echo -e "${GREEN}‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã –¥–ª—è Unity Editor –ø—Ä–∏–º–µ–Ω–µ–Ω—ã${NC}"
}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ (–∏–∑ OverheatProtectionSystem.cs)
enforce_emergency_limits() {
    echo -e "${RED}üîí –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π...${NC}"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    for process in Unity Cursor code; do
        local pids=$(pgrep "$process" 2>/dev/null)
        if [ -n "$pids" ]; then
            for pid in $pids; do
                if renice +19 "$pid" 2>/dev/null; then
                    echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ $process (PID: $pid)"
                fi
            done
        fi
    done
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || true
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    sync
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
check_maximum_load() {
    local cpu_load=$(get_cpu_load)
    local gpu_load=$(get_gpu_load)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 100% –Ω–∞–≥—Ä—É–∑–∫–∏
    if [ "$cpu_load" -ge "$MAX_CPU_LOAD_THRESHOLD" ] || [ "$gpu_load" -ge "$MAX_GPU_LOAD_THRESHOLD" ]; then
        echo -e "${RED}üö® –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ù–ê–ì–†–£–ó–ö–ê –î–û–°–¢–ò–ì–ù–£–¢–ê!${NC}"
        echo -e "${RED}   CPU: ${cpu_load}% (–ø–æ—Ä–æ–≥: ${MAX_CPU_LOAD_THRESHOLD}%)${NC}"
        echo -e "${RED}   GPU: ${gpu_load}% (–ø–æ—Ä–æ–≥: ${MAX_GPU_LOAD_THRESHOLD}%)${NC}"
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–µ—Ä—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏
        apply_load_reduction_measures "$cpu_load" "$gpu_load"
    else
        echo -e "${GREEN}‚úÖ –ù–∞–≥—Ä—É–∑–∫–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã - CPU: ${cpu_load}%, GPU: ${gpu_load}%${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ Unity Editor
check_unity_editor_load() {
    local unity_running=$(is_unity_editor_running)
    
    if [ "$unity_running" = "true" ]; then
        local cpu_load=$(get_cpu_load)
        local gpu_load=$(get_gpu_load)
        
        echo -e "${BLUE}üéÆ Unity Editor –∞–∫—Ç–∏–≤–µ–Ω - CPU: ${cpu_load}%, GPU: ${gpu_load}%${NC}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è Unity Editor
        if [ "$cpu_load" -gt "$UNITY_EDITOR_CPU_LIMIT" ] || [ "$gpu_load" -gt "$UNITY_EDITOR_GPU_LIMIT" ]; then
            echo -e "${RED}üö® –ü–†–ï–í–´–®–ï–ù–ò–ï –õ–ò–ú–ò–¢–û–í UNITY EDITOR!${NC}"
            echo -e "${RED}   CPU: ${cpu_load}% (–ª–∏–º–∏—Ç: ${UNITY_EDITOR_CPU_LIMIT}%)${NC}"
            echo -e "${RED}   GPU: ${gpu_load}% (–ª–∏–º–∏—Ç: ${UNITY_EDITOR_GPU_LIMIT}%)${NC}"
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã –¥–ª—è Unity Editor
            apply_unity_editor_emergency_measures "$cpu_load" "$gpu_load"
        else
            echo -e "${GREEN}‚úÖ Unity Editor —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã${NC}"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∏–∑ OverheatProtectionSystem.cs)
check_temperature() {
    local temp=$(get_cpu_temperature)
    
    if [ "$temp" -le 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É CPU${NC}"
        return
    fi
    
    echo -e "${CYAN}üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU: ${temp}¬∞C${NC}"
    
    # 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º Unity Editor (–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    check_unity_editor_load
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
    check_maximum_load
    
    # 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ (–∫–∞–∫ –≤ OverheatProtectionSystem.cs)
    if [ "$temp" -ge "$CRITICAL_TEMP_THRESHOLD" ]; then
        handle_emergency_temperature "$temp"
    elif [ "$temp" -ge "$WARNING_TEMP_THRESHOLD" ]; then
        handle_critical_temperature "$temp"
    elif [ "$temp" -ge "$SAFE_TEMP_THRESHOLD" ]; then
        handle_warning_temperature "$temp"
    else
        # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –Ω–æ—Ä–º–µ (Safe state)
        if [ "$IS_EMERGENCY_MODE" = true ]; then
            echo -e "${GREEN}üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–ª–∞—Å—å, –≤—ã—Ö–æ–¥ –∏–∑ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞${NC}"
            IS_EMERGENCY_MODE=false
        fi
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (Warning state –∏–∑ OverheatProtectionSystem.cs)
handle_warning_temperature() {
    local temp="$1"
    WARNING_COUNT=$((WARNING_COUNT + 1))
    
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU ${temp}¬∞C (—Å—á–µ—Ç—á–∏–∫: $WARNING_COUNT)${NC}"
    echo -e "${YELLOW}üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º—è–≥–∫–∏—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã...${NC}"
    
    # –ú—è–≥–∫–∏–µ –º–µ—Ä—ã (–∫–∞–∫ –≤ OverheatProtectionSystem.cs)
    apply_soft_measures
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (Critical state –∏–∑ OverheatProtectionSystem.cs)
handle_critical_temperature() {
    local temp="$1"
    CRITICAL_COUNT=$((CRITICAL_COUNT + 1))
    
    echo -e "${RED}üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê: ${temp}¬∞C (—Å—á–µ—Ç—á–∏–∫: $CRITICAL_COUNT)${NC}"
    echo -e "${RED}üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö –º–µ—Ä –∑–∞—â–∏—Ç—ã...${NC}"
    
    # –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –º–µ—Ä—ã (–∫–∞–∫ –≤ OverheatProtectionSystem.cs)
    apply_aggressive_measures
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (Emergency state –∏–∑ OverheatProtectionSystem.cs)
handle_emergency_temperature() {
    local temp="$1"
    EMERGENCY_COUNT=$((EMERGENCY_COUNT + 1))
    LAST_EMERGENCY_TIME=$(date '+%Y-%m-%d %H:%M:%S')
    IS_EMERGENCY_MODE=true
    
    echo -e "${RED}üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê: ${temp}¬∞C (—Å—á–µ—Ç—á–∏–∫: $EMERGENCY_COUNT)${NC}"
    echo -e "${RED}üö® –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –≠–ö–°–¢–†–ï–ù–ù–´–• –ú–ï–† –ó–ê–©–ò–¢–´!${NC}"
    
    # –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã (–∫–∞–∫ –≤ OverheatProtectionSystem.cs)
    apply_emergency_measures
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_stats() {
    echo
    echo -e "${BLUE}üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê${NC}"
    echo -e "${BLUE}==========================================${NC}"
    echo "–°—Ç–∞—Ç—É—Å: $([ "$IS_RUNNING" = true ] && echo -e "${GREEN}üü¢ –ê–∫—Ç–∏–≤–Ω–∞${NC}" || echo -e "${RED}üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}")"
    echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º: $([ "$IS_EMERGENCY_MODE" = true ] && echo -e "${RED}üö® –î–ê${NC}" || echo -e "${GREEN}‚úÖ –ù–ï–¢${NC}")"
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNING_COUNT"
    echo "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã: $CRITICAL_COUNT"
    echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã: $EMERGENCY_COUNT"
    
    if [ -n "$LAST_EMERGENCY_TIME" ]; then
        echo "–ü–æ—Å–ª–µ–¥–Ω—è—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è: $LAST_EMERGENCY_TIME"
    else
        echo "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π –Ω–µ –±—ã–ª–æ"
    fi
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
reset_stats() {
    WARNING_COUNT=0
    CRITICAL_COUNT=0
    EMERGENCY_COUNT=0
    LAST_EMERGENCY_TIME=""
    echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±—Ä–æ—à–µ–Ω–∞${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo
    echo -e "${PURPLE}‚ùì –°–ü–†–ê–í–ö–ê –ü–û –°–ò–°–¢–ï–ú–ï –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê${NC}"
    echo -e "${PURPLE}==========================================${NC}"
    echo "–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É CPU –∏ GPU"
    echo "–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–µ—Ä—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –Ω–æ—É—Ç–±—É–∫–∞."
    echo
    echo "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –¥–∞—Ç—á–∏–∫–∏:"
    echo "  ‚Ä¢ CPU –∑–∞–≥—Ä—É–∑–∫–∞ (htop, /proc/loadavg)"
    echo "  ‚Ä¢ GPU –∑–∞–≥—Ä—É–∑–∫–∞ (nvidia-smi, –ø—Ä–æ—Ü–µ—Å—Å—ã)"
    echo "  ‚Ä¢ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã"
    echo
    echo "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è Unity Editor:"
    echo -e "  ${BLUE}üéÆ Unity Editor: CPU ‚â§ 95%, GPU ‚â§ 95%${NC}"
    echo -e "  ${RED}üö® –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ + —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞${NC}"
    echo
    echo "–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã:"
    echo -e "  ${YELLOW}‚ö†Ô∏è  –ü—Ä–∏ 100% CPU/GPU: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –¥–æ 95%${NC}"
    echo -e "  ${YELLOW}üîß –ú–µ—Ä—ã: —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ + –ø–∞—É–∑–∞ + –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞${NC}"
    echo
    echo "–£—Ä–æ–≤–Ω–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∏–∑ OverheatProtectionSystem.cs):"
    echo -e "  ${YELLOW}‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: 75¬∞C+ - –ú—è–≥–∫–∏–µ –º–µ—Ä—ã${NC}"
    echo -e "  ${RED}üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è: 85¬∞C+ - –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –º–µ—Ä—ã${NC}"
    echo -e "  ${RED}üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è: 85¬∞C+ - –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã${NC}"
    echo
    echo "–ú–µ—Ä—ã –∑–∞—â–∏—Ç—ã:"
    echo "  ‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo "  ‚Ä¢ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∫—ç—à–∞"
    echo "  ‚Ä¢ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—É–∑—ã –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ"
    echo "  ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ CPU –∏ GPU –Ω–∞–≥—Ä—É–∑–∫–∏"
    echo "  ‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–ª—è Unity Editor"
    echo
    echo "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    echo "  Ctrl+C - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo "  's' - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'r' - –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'i' - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "  'h' - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
show_system_info() {
    echo
    echo -e "${CYAN}üíª –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï${NC}"
    echo -e "${CYAN}=======================${NC}"
    get_system_info
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
cleanup() {
    echo
    echo -e "${YELLOW}üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...${NC}"
    IS_RUNNING=false
    echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    exit 0
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${GREEN}üö® –ê–í–¢–û–ù–û–ú–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ó–ê–©–ò–¢–´ –û–¢ –ü–ï–†–ï–ì–†–ï–í–ê –ù–û–£–¢–ë–£–ö–ê üö®${NC}"
    echo -e "${GREEN}==================================================${NC}"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç (–≤–∫–ª—é—á–∞—è GPU)
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç...${NC}"
    
    local utilities=""
    local gpu_utilities=""
    
    # CPU –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
    [ -f "/usr/bin/htop" ] && utilities="$utilities htop"
    [ -f "/usr/bin/top" ] && utilities="$utilities top"
    [ -f "/proc/cpuinfo" ] && utilities="$utilities /proc/cpuinfo"
    [ -f "/proc/meminfo" ] && utilities="$utilities /proc/meminfo"
    [ -f "/proc/loadavg" ] && utilities="$utilities /proc/loadavg"
    [ -f "/proc/uptime" ] && utilities="$utilities /proc/uptime"
    [ -d "/sys/class/thermal" ] && utilities="$utilities /sys/class/thermal"
    
    # GPU —É—Ç–∏–ª–∏—Ç—ã
    if command -v nvidia-smi >/dev/null 2>&1; then
        gpu_utilities="$gpu_utilities nvidia-smi"
    fi
    if [ -f "/proc/driver/nvidia/version" ]; then
        gpu_utilities="$gpu_utilities nvidia-driver"
    fi
    
    if [ -n "$utilities" ]; then
        echo -e "${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã:$utilities${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.${NC}"
    fi
    
    if [ -n "$gpu_utilities" ]; then
        echo -e "${GREEN}‚úÖ GPU —É—Ç–∏–ª–∏—Ç—ã:$gpu_utilities${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  GPU —É—Ç–∏–ª–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤${NC}"
    fi
    
    echo
    echo -e "${GREEN}üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π:${NC}"
    echo "  's' - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'r' - –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  'i' - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "  'h' - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    echo "  Ctrl+C - –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    IS_RUNNING=true
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã...${NC}"
    echo
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–∫–∞–∫ –≤ OverheatProtectionSystem.cs)
    while [ "$IS_RUNNING" = true ]; do
        check_temperature
        
        # –í —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –Ω–∞–≥—Ä—É–∑–∫—É (–∫–∞–∫ –≤ OverheatProtectionSystem.cs)
        if [ "$IS_EMERGENCY_MODE" = true ]; then
            enforce_emergency_limits
            sleep "$EMERGENCY_COOLDOWN_TIME"
        else
            sleep "$TEMP_CHECK_INTERVAL"
        fi
    done
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
main "$@"