using System;
using System.Collections.Generic;
using Unity.Entities;
using UnityEngine;

namespace MudLike.Core.AI
{
    /// <summary>
    /// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è AI-–∞–≥–µ–Ω—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ Mud-Like
    /// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á
    /// </summary>
    [CreateAssetMenu(fileName = "AIAgentConfig", menuName = "Mud-Like/AI Agent Config")]
    public class AIAgentConfig : ScriptableObject
    {
        [Header("ü§ñ AI Agent Settings")]
        [Tooltip("–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —à–ª–∏—Ñ–æ–≤–∫—É –ø—Ä–æ–µ–∫—Ç–∞")]
        public bool EnableAutoPolishing = true;
        
        [Tooltip("–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫")]
        public bool EnableAutoFixing = true;
        
        [Tooltip("–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é")]
        public bool EnableAutoOptimization = true;
        
        [Header("‚ö° Performance Settings")]
        [Tooltip("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å Burst –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é")]
        public bool AutoAddBurstCompile = true;
        
        [Tooltip("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –¥–µ—Ç–µ—Ä–º–∏–Ω–∏–∑–º")]
        public bool AutoFixDeterminism = true;
        
        [Tooltip("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞–º—è—Ç—å")]
        public bool AutoOptimizeMemory = false;
        
        [Header("üìö Documentation Settings")]
        [Tooltip("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")]
        public bool AutoGenerateDocumentation = true;
        
        [Tooltip("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å README")]
        public bool AutoUpdateReadme = false;
        
        [Header("üîç Validation Settings")]
        [Tooltip("–°—Ç—Ä–æ–≥–æ—Å—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–¥–∞")]
        public ValidationLevel ValidationLevel = ValidationLevel.Strict;
        
        [Tooltip("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")]
        public bool AutoFixValidationIssues = true;
        
        [Header("üìä Reporting Settings")]
        [Tooltip("–°–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã –æ —Ä–∞–±–æ—Ç–µ")]
        public bool GenerateReports = true;
        
        [Tooltip("–£—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤")]
        public ReportDetailLevel ReportDetailLevel = ReportDetailLevel.Detailed;
        
        [Header("‚è∞ Scheduling Settings")]
        [Tooltip("–ó–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")]
        public bool EnableAutoScheduling = false;
        
        [Tooltip("–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–æ–∫ (–≤ –º–∏–Ω—É—Ç–∞—Ö)")]
        [Range(5, 1440)]
        public int CheckIntervalMinutes = 60;
        
        [Header("üéØ Task Priorities")]
        [Tooltip("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á –¥–µ—Ç–µ—Ä–º–∏–Ω–∏–∑–º–∞")]
        public TaskPriority DeterminismPriority = TaskPriority.Critical;
        
        [Tooltip("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")]
        public TaskPriority PerformancePriority = TaskPriority.High;
        
        [Tooltip("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")]
        public TaskPriority DocumentationPriority = TaskPriority.Medium;
        
        [Header("üìÅ File Patterns")]
        [Tooltip("–ü–∞—Ç—Ç–µ—Ä–Ω—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")]
        public List<string> AnalysisFilePatterns = new List<string>
        {
            "*.cs",
            "*.asmdef",
            "*.meta"
        };
        
        [Tooltip("–ò—Å–∫–ª—é—á–∞–µ–º—ã–µ –ø–∞–ø–∫–∏")]
        public List<string> ExcludeFolders = new List<string>
        {
            "Library",
            "Temp",
            "Logs",
            "UserSettings"
        };
        
        [Header("üîß Advanced Settings")]
        [Tooltip("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á")]
        [Range(1, 10)]
        public int MaxConcurrentTasks = 3;
        
        [Tooltip("–¢–∞–π–º–∞—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)")]
        [Range(10, 300)]
        public int TaskTimeoutSeconds = 60;
        
        [Tooltip("–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")]
        public LogLevel LogLevel = LogLevel.Info;
        
        /// <summary>
        /// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        /// </summary>
        public static AIAgentConfig GetDefaultConfig()
        {
            var config = CreateInstance<AIAgentConfig>();
            return config;
        }
        
        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è
        /// </summary>
        public bool IsFeatureEnabled(string featureName)
        {
            return featureName switch
            {
                "AutoPolishing" => EnableAutoPolishing,
                "AutoFixing" => EnableAutoFixing,
                "AutoOptimization" => EnableAutoOptimization,
                "BurstCompile" => AutoAddBurstCompile,
                "Determinism" => AutoFixDeterminism,
                "Memory" => AutoOptimizeMemory,
                "Documentation" => AutoGenerateDocumentation,
                "Readme" => AutoUpdateReadme,
                "Reports" => GenerateReports,
                "Scheduling" => EnableAutoScheduling,
                _ => false
            };
        }
        
        /// <summary>
        /// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏
        /// </summary>
        public TaskPriority GetTaskPriority(string taskType)
        {
            return taskType switch
            {
                "Determinism" => DeterminismPriority,
                "Performance" => PerformancePriority,
                "Documentation" => DocumentationPriority,
                _ => TaskPriority.Medium
            };
        }
    }
    
    /// <summary>
    /// –£—Ä–æ–≤–Ω–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    /// </summary>
    public enum ValidationLevel
    {
        Relaxed,    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        Standard,   // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        Strict,     // –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        Extreme     // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    }
    
    /// <summary>
    /// –£—Ä–æ–≤–Ω–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
    /// </summary>
    public enum ReportDetailLevel
    {
        Minimal,    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        Standard,   // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        Detailed,   // –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        Verbose     // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è
    }
    
    /// <summary>
    /// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∑–∞–¥–∞—á
    /// </summary>
    public enum TaskPriority
    {
        Critical,   // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π
        High,       // –í—ã—Å–æ–∫–∏–π
        Medium,     // –°—Ä–µ–¥–Ω–∏–π
        Low         // –ù–∏–∑–∫–∏–π
    }
    
    /// <summary>
    /// –£—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    /// </summary>
    public enum LogLevel
    {
        Error,      // –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏
        Warning,    // –û—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        Info,       // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        Debug       // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    }
}
